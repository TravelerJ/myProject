<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spring</name>
    </assembly>
    <members>
        <member name="T:Spring.Extensions">
            <summary>
            工具扩展
            </summary>
            <summary>
            系统扩展 - 公共
            </summary>
            <summary>
            系统扩展 - 类型转换
            </summary>
            <summary>
            系统扩展 - 日期
            </summary>
            <summary>
            系统扩展 - 文件或流相关扩展
            </summary>
            <summary>
            系统扩展 - 格式化
            </summary>
            <summary>
            系统扩展 - 基础设施
            </summary>
            <summary>
            系统扩展 - Lambda表达式
            </summary>
            <summary>
            系统扩展 - 验证
            </summary>
        </member>
        <member name="M:Spring.Extensions.Splice``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            转换为用分隔符拼接的字符串
            </summary>
            <typeparam name="T">集合元素类型</typeparam>
            <param name="list">集合</param>
            <param name="quotes">引号，默认不带引号，范例：单引号 "'"</param>
            <param name="separator">分隔符，默认使用逗号分隔</param>
        </member>
        <member name="M:Spring.Extensions.Truncate(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            截断字符串
            </summary>
            <param name="text">文本</param>
            <param name="length">返回长度</param>
            <param name="endCharCount">添加结束符号的个数，默认0，不添加</param>
            <param name="endChar">结束符号，默认为省略号</param>
        </member>
        <member name="M:Spring.Extensions.SafeValue``1(System.Nullable{``0})">
            <summary>
            安全获取值，当值为null时，不会抛出异常
            </summary>
            <param name="value">可空值</param>
        </member>
        <member name="M:Spring.Extensions.Value(System.Enum)">
            <summary>
            获取枚举值
            </summary>
            <param name="instance">枚举实例</param>
        </member>
        <member name="M:Spring.Extensions.Value``1(System.Enum)">
            <summary>
            获取枚举值
            </summary>
            <typeparam name="TResult">返回值类型</typeparam>
            <param name="instance">枚举实例</param>
        </member>
        <member name="M:Spring.Extensions.Description(System.Enum)">
            <summary>
            获取枚举描述,使用System.ComponentModel.Description特性设置描述
            </summary>
            <param name="instance">枚举实例</param>
        </member>
        <member name="M:Spring.Extensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            转换为用分隔符连接的字符串
            </summary>
            <typeparam name="T">集合元素类型</typeparam>
            <param name="list">集合</param>
            <param name="quotes">引号，默认不带引号，范例：单引号 "'"</param>
            <param name="separator">分隔符，默认使用逗号分隔</param>
        </member>
        <member name="M:Spring.Extensions.SafeString(System.Object)">
            <summary>
            安全转换为字符串，去除两端空格，当值为null时返回""
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Extensions.ToBool(System.String)">
            <summary>
            转换为bool
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToBoolOrNull(System.String)">
            <summary>
            转换为可空bool
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToInt(System.String)">
            <summary>
            转换为int
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToIntOrNull(System.String)">
            <summary>
            转换为可空int
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToLong(System.String)">
            <summary>
            转换为long
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToLongOrNull(System.String)">
            <summary>
            转换为可空long
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToDouble(System.String)">
            <summary>
            转换为double
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToDoubleOrNull(System.String)">
            <summary>
            转换为可空double
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToDecimal(System.String)">
            <summary>
            转换为decimal
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToDecimalOrNull(System.String)">
            <summary>
            转换为可空decimal
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToDate(System.String)">
            <summary>
            转换为日期
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToDateOrNull(System.String)">
            <summary>
            转换为可空日期
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToGuid(System.String)">
            <summary>
            转换为Guid
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToGuidOrNull(System.String)">
            <summary>
            转换为可空Guid
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:Spring.Extensions.ToGuidList(System.String)">
            <summary>
            转换为Guid集合
            </summary>
            <param name="obj">数据,范例: "83B0233C-A24F-49FD-8083-1337209EBC9A,EAB523C6-2FE7-47BE-89D5-C6D440C3033A"</param>
        </member>
        <member name="M:Spring.Extensions.ToGuidList(System.Collections.Generic.IList{System.String})">
            <summary>
            转换为Guid集合
            </summary>
            <param name="obj">字符串集合</param>
        </member>
        <member name="M:Spring.Extensions.ToDateTimeString(System.DateTime,System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy-MM-dd HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
            <param name="removeSecond">是否移除秒</param>
        </member>
        <member name="M:Spring.Extensions.ToDateTimeString(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy-MM-dd HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
            <param name="removeSecond">是否移除秒</param>
        </member>
        <member name="M:Spring.Extensions.ToDateString(System.DateTime)">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy-MM-dd"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:Spring.Extensions.ToDateString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy-MM-dd"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:Spring.Extensions.ToTimeString(System.DateTime)">
            <summary>
            获取格式化字符串，不带年月日，格式："HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:Spring.Extensions.ToTimeString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，不带年月日，格式："HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:Spring.Extensions.ToMillisecondString(System.DateTime)">
            <summary>
            获取格式化字符串，带毫秒，格式："yyyy-MM-dd HH:mm:ss.fff"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:Spring.Extensions.ToMillisecondString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，带毫秒，格式："yyyy-MM-dd HH:mm:ss.fff"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:Spring.Extensions.ToChineseDateString(System.DateTime)">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy年MM月dd日"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:Spring.Extensions.ToChineseDateString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy年MM月dd日"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:Spring.Extensions.ToChineseDateTimeString(System.DateTime,System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy年MM月dd日 HH时mm分"
            </summary>
            <param name="dateTime">日期</param>
            <param name="removeSecond">是否移除秒</param>
        </member>
        <member name="M:Spring.Extensions.ToChineseDateTimeString(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy年MM月dd日 HH时mm分"
            </summary>
            <param name="dateTime">日期</param>
            <param name="removeSecond">是否移除秒</param>
        </member>
        <member name="M:Spring.Extensions.Description(System.TimeSpan)">
            <summary>
            获取描述
            </summary>
            <param name="span">时间间隔</param>
        </member>
        <member name="M:Spring.Extensions.ToFile(System.Byte[],System.String)">
            <summary>
            将字节流写入文件
            </summary>
            <param name="stream">字节流</param>
            <param name="filePath">文件绝对路径</param>
        </member>
        <member name="M:Spring.Extensions.Description(System.Boolean)">
            <summary>
            获取描述
            </summary>
            <param name="value">布尔值</param>
        </member>
        <member name="M:Spring.Extensions.Description(System.Nullable{System.Boolean})">
            <summary>
            获取描述
            </summary>
            <param name="value">布尔值</param>
        </member>
        <member name="M:Spring.Extensions.AddUtil(Microsoft.Extensions.DependencyInjection.IServiceCollection,Spring.Dependency.IConfig[])">
            <summary>
            注册Util基础设施服务
            </summary>
            <param name="services">服务集合</param>
            <param name="configs">依赖配置</param>
        </member>
        <member name="M:Spring.Extensions.Property(System.Linq.Expressions.Expression,System.String)">
            <summary>
            创建属性表达式
            </summary>
            <param name="expression">表达式</param>
            <param name="propertyName">属性名,支持多级属性名，与句点分隔，范例：Customer.Name</param>
        </member>
        <member name="M:Spring.Extensions.Property(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
            <summary>
            创建属性表达式
            </summary>
            <param name="expression">表达式</param>
            <param name="member">属性</param>
        </member>
        <member name="M:Spring.Extensions.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            与操作表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:Spring.Extensions.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            与操作表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:Spring.Extensions.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            或操作表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:Spring.Extensions.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            或操作表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:Spring.Extensions.Value``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取lambda表达式的值
            </summary>
            <typeparam name="T">对象类型</typeparam>
        </member>
        <member name="M:Spring.Extensions.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:Spring.Extensions.Equal(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建不等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:Spring.Extensions.NotEqual(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建不等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.Greater(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建大于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:Spring.Extensions.Greater(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建大于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.GreaterEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建大于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:Spring.Extensions.GreaterEqual(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建大于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.Less(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建小于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:Spring.Extensions.Less(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建小于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.LessEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建小于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:Spring.Extensions.LessEqual(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建小于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.StartsWith(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            头匹配
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.EndsWith(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            尾匹配
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.Contains(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            模糊匹配
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.Operation(System.Linq.Expressions.Expression,Spring.Datas.Queries.Operator,System.Object)">
            <summary>
            操作
            </summary>
            <param name="left">左操作数</param>
            <param name="operator">运算符</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.Call(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])">
            <summary>
            创建调用方法表达式
            </summary>
            <param name="instance">调用的实例</param>
            <param name="methodName">方法名</param>
            <param name="values">参数值列表</param>
        </member>
        <member name="M:Spring.Extensions.Call(System.Linq.Expressions.Expression,System.String,System.Object[])">
            <summary>
            创建调用方法表达式
            </summary>
            <param name="instance">调用的实例</param>
            <param name="methodName">方法名</param>
            <param name="values">参数值列表</param>
        </member>
        <member name="M:Spring.Extensions.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Object[])">
            <summary>
            创建调用方法表达式
            </summary>
            <param name="instance">调用的实例</param>
            <param name="methodName">方法名</param>
            <param name="paramTypes">参数类型列表</param>
            <param name="values">参数值列表</param>
        </member>
        <member name="M:Spring.Extensions.Compose``1(System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression{``0},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
            组合表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="first">左操作数</param>
            <param name="second">右操作数</param>
            <param name="merge">合并操作</param>
        </member>
        <member name="M:Spring.Extensions.ToLambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
            <summary>
            创建Lambda表达式
            </summary>
            <typeparam name="TDelegate">委托类型</typeparam>
            <param name="body">表达式</param>
            <param name="parameters">参数列表</param>
        </member>
        <member name="M:Spring.Extensions.CheckNull(System.Object,System.String)">
            <summary>
            检测对象是否为null,为null则抛出<see cref="T:System.ArgumentNullException"/>异常
            </summary>
            <param name="obj">对象</param>
            <param name="parameterName">参数名</param>
        </member>
        <member name="M:Spring.Extensions.IsEmpty(System.String)">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.IsEmpty(System.Guid)">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Extensions.IsEmpty(System.Nullable{System.Guid})">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="T:Spring.ApplicationServices.ErrorMessage">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:Spring.ApplicationServices.ErrorMessage.Code">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Spring.ApplicationServices.ErrorMessage.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:Spring.ApplicationServices.ErrorMessage.Description">
            <summary>
            详细描述
            </summary>
        </member>
        <member name="T:Spring.ApplicationServices.StateCode">
            <summary>
            错误代码
            错误代码说明：
            如 20502 错误代码说明： 2表示服务级错误(1为系统级错误) 05表示服务模块代码 02表示具体错误代码 
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.Ok">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.SystemError">
            <summary>
            系统错误
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.ServiceUnavailable">
            <summary>
            服务暂停
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.RemoteServiceError">
            <summary>
            远程服务错误
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.ParamError">
            <summary>
            参数错误
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.JobExpired">
            <summary>
            任务超时
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.IllegalRequest">
            <summary>
            非法请求
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.InvalidUser">
            <summary>
            不合法的用户
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.RequestLengthOverLimit">
            <summary>
            请求长度超过限制
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.NotFoundResource">
            <summary>
            资源不存在
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.UserNotExist">
            <summary>
            用户不存在
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.ContentIsNull">
            <summary>
            内容为空
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.PhoneHasBeenUsed">
            <summary>
            该手机号已经被使用
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.AccountHasBeenBindPhone">
            <summary>
            该用户已经绑定手机
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.AuthFaild">
            <summary>
            认证失败
            </summary>
        </member>
        <member name="F:Spring.ApplicationServices.StateCode.UsernameOrPasswordError">
            <summary>
            用户名或密码不正确
            </summary>
        </member>
        <member name="T:Spring.Aspects.Base.InterceptorBase">
            <summary>
            拦截器
            </summary>
        </member>
        <member name="T:Spring.Aspects.Base.ParameterInterceptorBase">
            <summary>
            参数拦截器
            </summary>
        </member>
        <member name="T:Spring.Aspects.IgnoreAttribute">
            <summary>
            忽略拦截
            </summary>
        </member>
        <member name="T:Spring.Aspects.NotEmptyAttribute">
            <summary>
            验证不能为空
            </summary>
        </member>
        <member name="M:Spring.Aspects.NotEmptyAttribute.Invoke(AspectCore.DynamicProxy.Parameters.ParameterAspectContext,AspectCore.DynamicProxy.Parameters.ParameterAspectDelegate)">
            <summary>
            执行
            </summary>
        </member>
        <member name="T:Spring.Aspects.NotNullAttribute">
            <summary>
            验证不能为null
            </summary>
        </member>
        <member name="M:Spring.Aspects.NotNullAttribute.Invoke(AspectCore.DynamicProxy.Parameters.ParameterAspectContext,AspectCore.DynamicProxy.Parameters.ParameterAspectDelegate)">
            <summary>
            执行
            </summary>
        </member>
        <member name="T:Spring.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:Spring.Config.DefaultEncoding">
            <summary>
            默认编码,值为utf-8
            </summary>
        </member>
        <member name="M:Spring.Config.GetLogContextKey">
            <summary>
            获取日志上下文键名
            </summary>
        </member>
        <member name="M:Spring.Config.GetKey">
            <summary>
            获取临时加密密钥
            </summary>
        </member>
        <member name="M:Spring.Config.GetStoreKey">
            <summary>
            获取存储加密密钥
            </summary>
        </member>
        <member name="T:Spring.Contexts.IContext">
            <summary>
            上下文
            </summary>
        </member>
        <member name="P:Spring.Contexts.IContext.TraceId">
            <summary>
            跟踪号
            </summary>
        </member>
        <member name="M:Spring.Contexts.IContext.Add``1(System.String,``0)">
            <summary>
            添加对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">键名</param>
            <param name="value">对象</param>
        </member>
        <member name="M:Spring.Contexts.IContext.Get``1(System.String)">
            <summary>
            获取对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">键名</param>
        </member>
        <member name="M:Spring.Contexts.IContext.Remove(System.String)">
            <summary>
            移除对象
            </summary>
            <param name="key">键名</param>
        </member>
        <member name="T:Spring.Contexts.WebContext">
            <summary>
            Web上下文
            </summary>
        </member>
        <member name="M:Spring.Contexts.WebContext.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            初始化Web上下文
            </summary>
            <param name="accessor">Http上下文访问器</param>
        </member>
        <member name="P:Spring.Contexts.WebContext.HttpContextAccessor">
            <summary>
            Http上下文访问器
            </summary>
        </member>
        <member name="P:Spring.Contexts.WebContext.TraceId">
            <summary>
            跟踪号
            </summary>
        </member>
        <member name="M:Spring.Contexts.WebContext.Add``1(System.String,``0)">
            <summary>
            添加对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">键名</param>
            <param name="value">对象</param>
        </member>
        <member name="M:Spring.Contexts.WebContext.Get``1(System.String)">
            <summary>
            获取对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">键名</param>
        </member>
        <member name="M:Spring.Contexts.WebContext.Remove(System.String)">
            <summary>
            移除对象
            </summary>
            <param name="key">键名</param>
        </member>
        <member name="T:Spring.Datas.Queries.Operator">
            <summary>
            查询操作符
            </summary>
        </member>
        <member name="F:Spring.Datas.Queries.Operator.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:Spring.Datas.Queries.Operator.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:Spring.Datas.Queries.Operator.Greater">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:Spring.Datas.Queries.Operator.GreaterEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:Spring.Datas.Queries.Operator.Less">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:Spring.Datas.Queries.Operator.LessEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:Spring.Datas.Queries.Operator.Starts">
            <summary>
            头匹配
            </summary>
        </member>
        <member name="F:Spring.Datas.Queries.Operator.Ends">
            <summary>
            尾匹配
            </summary>
        </member>
        <member name="F:Spring.Datas.Queries.Operator.Contains">
            <summary>
            模糊匹配
            </summary>
        </member>
        <member name="T:Spring.Datas.UnitOfWorks.IUnitOfWork">
            <summary>
            工作单元
            </summary>
        </member>
        <member name="M:Spring.Datas.UnitOfWorks.IUnitOfWork.Commit">
            <summary>
            提交,返回影响的行数
            </summary>
        </member>
        <member name="M:Spring.Datas.UnitOfWorks.IUnitOfWork.CommitAsync">
            <summary>
            提交,返回影响的行数
            </summary>
        </member>
        <member name="T:Spring.Dependency.ConfigBase">
            <summary>
            配置
            </summary>
        </member>
        <member name="T:Spring.Dependency.Container">
            <summary>
            Autofac对象容器
            </summary>
        </member>
        <member name="F:Spring.Dependency.Container._container">
            <summary>
            容器
            </summary>
        </member>
        <member name="M:Spring.Dependency.Container.CreateList``1(System.String)">
            <summary>
            创建集合
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Dependency.Container.CreateList(System.Type,System.String)">
            <summary>
            创建集合
            </summary>
            <param name="type">对象类型</param>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Dependency.Container.Create``1(System.String)">
            <summary>
            创建对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Dependency.Container.Create(System.Type,System.String)">
            <summary>
            创建对象
            </summary>
            <param name="type">对象类型</param>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Dependency.Container.GetServiceFromHttpContext(System.Type,System.String)">
            <summary>
            从HttpContext获取服务
            </summary>
        </member>
        <member name="M:Spring.Dependency.Container.GetService(System.Type,System.String)">
            <summary>
            获取服务
            </summary>
        </member>
        <member name="M:Spring.Dependency.Container.BeginScope">
            <summary>
            作用域开始
            </summary>
        </member>
        <member name="M:Spring.Dependency.Container.Register(Spring.Dependency.IConfig[])">
            <summary>
            注册依赖
            </summary>
            <param name="configs">依赖配置</param>
        </member>
        <member name="M:Spring.Dependency.Container.Register(Microsoft.Extensions.DependencyInjection.IServiceCollection,Spring.Dependency.IConfig[])">
            <summary>
            注册依赖
            </summary>
            <param name="services">服务集合</param>
            <param name="configs">依赖配置</param>
        </member>
        <member name="M:Spring.Dependency.Container.Register(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Autofac.ContainerBuilder},Spring.Dependency.IConfig[])">
            <summary>
            注册依赖
            </summary>
            <param name="services">服务集合</param>
            <param name="actionBefore">注册前操作</param>
            <param name="configs">依赖配置</param>
        </member>
        <member name="M:Spring.Dependency.Container.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Autofac.ContainerBuilder},Spring.Dependency.IConfig[])">
            <summary>
            创建容器生成器
            </summary>
            <param name="services">服务集合</param>
            <param name="actionBefore">注册前执行的操作</param>
            <param name="configs">依赖配置</param>
        </member>
        <member name="M:Spring.Dependency.Container.Dispose">
            <summary>
            释放容器
            </summary>
        </member>
        <member name="T:Spring.Dependency.DependencyConfiguration">
            <summary>
            依赖配置
            </summary>
        </member>
        <member name="F:Spring.Dependency.DependencyConfiguration._services">
            <summary>
            服务集合
            </summary>
        </member>
        <member name="F:Spring.Dependency.DependencyConfiguration._configs">
            <summary>
            依赖配置
            </summary>
        </member>
        <member name="F:Spring.Dependency.DependencyConfiguration._builder">
            <summary>
            容器生成器
            </summary>
        </member>
        <member name="F:Spring.Dependency.DependencyConfiguration._finder">
            <summary>
            类型查找器
            </summary>
        </member>
        <member name="F:Spring.Dependency.DependencyConfiguration._assemblies">
            <summary>
            程序集列表
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,Spring.Dependency.IConfig[])">
            <summary>
            初始化依赖配置
            </summary>
            <param name="services">服务集合</param>
            <param name="configs">依赖配置</param>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.Config">
            <summary>
            配置依赖
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.RegistServices(Autofac.ContainerBuilder)">
            <summary>
            注册服务集合
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.RegistInfrastracture">
            <summary>
            注册基础设施
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.EnableAop">
            <summary>
            启用Aop
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.RegistFinder">
            <summary>
            注册类型查找器
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.RegistContext">
            <summary>
            注册上下文
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.RegistEventHandlers">
            <summary>
            注册事件处理器
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.RegistDependency">
            <summary>
            查找并注册依赖
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.RegistSingletonDependency">
            <summary>
            注册单例依赖
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.RegistScopeDependency">
            <summary>
            注册作用域依赖
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.RegistTransientDependency">
            <summary>
            注册瞬态依赖
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.ResolveDependencyRegistrar">
            <summary>
            解析依赖注册器
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.GetTypes``1">
            <summary>
            获取类型集合
            </summary>
        </member>
        <member name="M:Spring.Dependency.DependencyConfiguration.GetTypes(System.Type)">
            <summary>
            获取类型集合
            </summary>
        </member>
        <member name="T:Spring.Dependency.Extensions">
            <summary>
            AspectCore扩展
            </summary>
            <summary>
            Autofac扩展
            </summary>
        </member>
        <member name="M:Spring.Dependency.Extensions.EnableAop(Autofac.ContainerBuilder)">
            <summary>
            启用Aop
            </summary>
        </member>
        <member name="M:Spring.Dependency.Extensions.EnableAspectScoped(Autofac.ContainerBuilder)">
            <summary>
            启用Aop作用域
            </summary>
        </member>
        <member name="M:Spring.Dependency.Extensions.AddTransient``2(Autofac.ContainerBuilder,System.String)">
            <summary>
            注册服务，生命周期为 InstancePerDependency(每次创建一个新实例)
            </summary>
            <typeparam name="TService">接口类型</typeparam>
            <typeparam name="TImplementation">实现类型</typeparam>
            <param name="builder">容器生成器</param>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Dependency.Extensions.AddScoped``2(Autofac.ContainerBuilder,System.String)">
            <summary>
            注册服务，生命周期为 InstancePerLifetimeScope(每个请求一个实例)
            </summary>
            <typeparam name="TService">接口类型</typeparam>
            <typeparam name="TImplementation">实现类型</typeparam>
            <param name="builder">容器生成器</param>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Dependency.Extensions.AddScoped``1(Autofac.ContainerBuilder)">
            <summary>
            注册服务，生命周期为 InstancePerLifetimeScope(每个请求一个实例)
            </summary>
            <typeparam name="TImplementation">实现类型</typeparam>
            <param name="builder">容器生成器</param>
        </member>
        <member name="M:Spring.Dependency.Extensions.AddSingleton``2(Autofac.ContainerBuilder,System.String)">
            <summary>
            注册服务，生命周期为 SingleInstance（单例）
            </summary>
            <typeparam name="TService">接口类型</typeparam>
            <typeparam name="TImplementation">实现类型</typeparam>
            <param name="builder">容器生成器</param>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Dependency.Extensions.AddSingleton``1(Autofac.ContainerBuilder,``0)">
            <summary>
            注册服务，生命周期为 SingleInstance（单例）
            </summary>
            <typeparam name="TService">接口类型</typeparam>
            <param name="builder">容器生成器</param>
            <param name="instance">服务实例</param>
        </member>
        <member name="T:Spring.Dependency.IConfig">
            <summary>
            依赖配置
            </summary>
        </member>
        <member name="T:Spring.Dependency.IContainer">
            <summary>
            容器
            </summary>
        </member>
        <member name="M:Spring.Dependency.IContainer.CreateList``1(System.String)">
            <summary>
            创建集合
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Dependency.IContainer.CreateList(System.Type,System.String)">
            <summary>
            创建集合
            </summary>
            <param name="type">对象类型</param>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Dependency.IContainer.Create``1(System.String)">
            <summary>
            创建实例
            </summary>
            <typeparam name="T">实例类型</typeparam>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Dependency.IContainer.Create(System.Type,System.String)">
            <summary>
            创建对象
            </summary>
            <param name="type">对象类型</param>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Dependency.IContainer.BeginScope">
            <summary>
            作用域开始
            </summary>
        </member>
        <member name="M:Spring.Dependency.IContainer.Register(Spring.Dependency.IConfig[])">
            <summary>
            注册依赖
            </summary>
            <param name="configs">依赖配置</param>
        </member>
        <member name="M:Spring.Dependency.IContainer.Register(Microsoft.Extensions.DependencyInjection.IServiceCollection,Spring.Dependency.IConfig[])">
            <summary>
            注册依赖
            </summary>
            <param name="services">服务集合</param>
            <param name="configs">依赖配置</param>
        </member>
        <member name="T:Spring.Dependency.IDependencyRegistrar">
            <summary>
            依赖注册器
            </summary>
        </member>
        <member name="M:Spring.Dependency.IDependencyRegistrar.Regist(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册依赖
            </summary>
            <param name="services">服务集合</param>
        </member>
        <member name="T:Spring.Dependency.IScope">
            <summary>
            作用域
            </summary>
        </member>
        <member name="M:Spring.Dependency.IScope.Create``1">
            <summary>
            创建实例
            </summary>
            <typeparam name="T">实例类型</typeparam>
        </member>
        <member name="M:Spring.Dependency.IScope.Create(System.Type)">
            <summary>
            创建对象
            </summary>
            <param name="type">对象类型</param>
        </member>
        <member name="T:Spring.Dependency.IScopeDependency">
            <summary>
            实现该接口将自动注册到Ioc容器，生命周期为每次请求创建一个实例
            </summary>
        </member>
        <member name="T:Spring.Dependency.ISingletonDependency">
            <summary>
            实现该接口将自动注册到Ioc容器，生命周期为单例
            </summary>
        </member>
        <member name="T:Spring.Dependency.ITransientDependency">
            <summary>
            实现该接口将自动注册到Ioc容器，生命周期为每次创建一个新实例
            </summary>
        </member>
        <member name="T:Spring.Dependency.Scope">
            <summary>
            作用域
            </summary>
        </member>
        <member name="F:Spring.Dependency.Scope._scope">
            <summary>
            autofac作用域
            </summary>
        </member>
        <member name="M:Spring.Dependency.Scope.#ctor(Autofac.ILifetimeScope)">
            <summary>
            初始化作用域
            </summary>
            <param name="scope">autofac作用域</param>
        </member>
        <member name="M:Spring.Dependency.Scope.Create``1">
            <summary>
            创建实例
            </summary>
            <typeparam name="T">实例类型</typeparam>
        </member>
        <member name="M:Spring.Dependency.Scope.Create(System.Type)">
            <summary>
            创建对象
            </summary>
            <param name="type">对象类型</param>
        </member>
        <member name="M:Spring.Dependency.Scope.Dispose">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="T:Spring.Domains.AggregateRoot`2">
            <summary>
            聚合根
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TKey">标识类型</typeparam>
        </member>
        <member name="M:Spring.Domains.AggregateRoot`2.#ctor(`1)">
            <summary>
            初始化聚合根
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="P:Spring.Domains.AggregateRoot`2.Version">
            <summary>
            版本号(乐观锁)
            </summary>
        </member>
        <member name="T:Spring.Domains.AggregateRoot`1">
            <summary>
            聚合根
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Spring.Domains.AggregateRoot`1.#ctor(System.Guid)">
            <summary>
            初始化聚合根
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="T:Spring.Domains.Auditing.CreationAuditedInitializer">
            <summary>
            创建操作审计初始化器
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.CreationAuditedInitializer.#ctor(System.Object,Spring.Domains.Sessions.ISession)">
            <summary>
            初始化创建操作审计初始化器
            </summary>
            <param name="entity">实体</param>
            <param name="session">用户上下文</param>
        </member>
        <member name="F:Spring.Domains.Auditing.CreationAuditedInitializer._entity">
            <summary>
            实体
            </summary>
        </member>
        <member name="F:Spring.Domains.Auditing.CreationAuditedInitializer._session">
            <summary>
            用户会话
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.CreationAuditedInitializer.Init(System.Object,Spring.Domains.Sessions.ISession)">
            <summary>
            初始化
            </summary>
            <param name="entity">实体</param>
            <param name="session">用户上下文</param>
        </member>
        <member name="M:Spring.Domains.Auditing.CreationAuditedInitializer.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.CreationAuditedInitializer.InitGuid">
            <summary>
            初始化Guid
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.CreationAuditedInitializer.InitNullableGuid">
            <summary>
            初始化可空Guid
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.CreationAuditedInitializer.InitInt">
            <summary>
            初始化int
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.CreationAuditedInitializer.InitNullableInt">
            <summary>
            初始化可空int
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.CreationAuditedInitializer.InitString">
            <summary>
            初始化字符串
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.CreationAuditedInitializer.InitLong">
            <summary>
            初始化Long
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.CreationAuditedInitializer.InitNullableLong">
            <summary>
            初始化可空Long
            </summary>
        </member>
        <member name="T:Spring.Domains.Auditing.IAudited">
            <summary>
            操作审计
            </summary>
        </member>
        <member name="T:Spring.Domains.Auditing.IAudited`1">
            <summary>
            操作审计
            </summary>
            <typeparam name="TKey">操作人编号类型</typeparam>
        </member>
        <member name="T:Spring.Domains.Auditing.ICreationAudited">
            <summary>
            创建操作审计
            </summary>
        </member>
        <member name="T:Spring.Domains.Auditing.ICreationAudited`1">
            <summary>
            创建操作审计
            </summary>
            <typeparam name="TKey">创建人编号类型</typeparam>
        </member>
        <member name="P:Spring.Domains.Auditing.ICreationAudited`1.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Spring.Domains.Auditing.ICreationAudited`1.CreatorId">
            <summary>
            创建人编号
            </summary>
        </member>
        <member name="T:Spring.Domains.Auditing.IModificationAudited">
            <summary>
            修改操作审计
            </summary>
        </member>
        <member name="T:Spring.Domains.Auditing.IModificationAudited`1">
            <summary>
            修改操作审计
            </summary>
            <typeparam name="TKey">最后修改人编号类型</typeparam>
        </member>
        <member name="P:Spring.Domains.Auditing.IModificationAudited`1.LastModificationTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Spring.Domains.Auditing.IModificationAudited`1.LastModifierId">
            <summary>
            最后修改人编号
            </summary>
        </member>
        <member name="T:Spring.Domains.Auditing.ModificationAuditedInitializer">
            <summary>
            修改操作审计初始化器
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.ModificationAuditedInitializer.#ctor(System.Object,Spring.Domains.Sessions.ISession)">
            <summary>
            初始化修改操作审计初始化器
            </summary>
            <param name="entity">实体</param>
            <param name="session">用户上下文</param>
        </member>
        <member name="F:Spring.Domains.Auditing.ModificationAuditedInitializer._entity">
            <summary>
            实体
            </summary>
        </member>
        <member name="F:Spring.Domains.Auditing.ModificationAuditedInitializer._session">
            <summary>
            用户会话
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.ModificationAuditedInitializer.Init(System.Object,Spring.Domains.Sessions.ISession)">
            <summary>
            初始化
            </summary>
            <param name="entity">实体</param>
            <param name="session">用户上下文</param>
        </member>
        <member name="M:Spring.Domains.Auditing.ModificationAuditedInitializer.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.ModificationAuditedInitializer.InitGuid">
            <summary>
            初始化Guid
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.ModificationAuditedInitializer.InitNullableGuid">
            <summary>
            初始化可空Guid
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.ModificationAuditedInitializer.InitInt">
            <summary>
            初始化int
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.ModificationAuditedInitializer.InitNullableInt">
            <summary>
            初始化可空int
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.ModificationAuditedInitializer.InitString">
            <summary>
            初始化字符串
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.ModificationAuditedInitializer.InitLong">
            <summary>
            初始化Long
            </summary>
        </member>
        <member name="M:Spring.Domains.Auditing.ModificationAuditedInitializer.InitNullableLong">
            <summary>
            初始化可空Long
            </summary>
        </member>
        <member name="T:Spring.Domains.ChangeValue">
            <summary>
            变更值
            </summary>
        </member>
        <member name="M:Spring.Domains.ChangeValue.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            初始化变更值
            </summary>
            <param name="propertyName">属性名</param>
            <param name="description">描述</param>
            <param name="oldValue">旧值</param>
            <param name="newValue">新值</param>
        </member>
        <member name="P:Spring.Domains.ChangeValue.PropertyName">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:Spring.Domains.ChangeValue.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Spring.Domains.ChangeValue.OldValue">
            <summary>
            旧值
            </summary>
        </member>
        <member name="P:Spring.Domains.ChangeValue.NewValue">
            <summary>
            新值
            </summary>
        </member>
        <member name="M:Spring.Domains.ChangeValue.ToString">
            <summary>
            输出变更信息
            </summary>
        </member>
        <member name="T:Spring.Domains.ChangeValueCollection">
            <summary>
            变更值集合
            </summary>
        </member>
        <member name="M:Spring.Domains.ChangeValueCollection.Add(System.String,System.String,System.String,System.String)">
            <summary>
            添加
            </summary>
            <param name="propertyName">属性名</param>
            <param name="description">描述</param>
            <param name="oldValue">旧值</param>
            <param name="newValue">新值</param>
        </member>
        <member name="M:Spring.Domains.ChangeValueCollection.ToString">
            <summary>
            输出变更信息
            </summary>
        </member>
        <member name="T:Spring.Domains.DomainBase`1">
            <summary>
            领域层顶级基类
            </summary>
        </member>
        <member name="F:Spring.Domains.DomainBase`1._description">
            <summary>
            描述
            </summary>
        </member>
        <member name="F:Spring.Domains.DomainBase`1._rules">
            <summary>
            验证规则集合
            </summary>
        </member>
        <member name="F:Spring.Domains.DomainBase`1._handler">
            <summary>
            验证处理器
            </summary>
        </member>
        <member name="F:Spring.Domains.DomainBase`1._changeValues">
            <summary>
            变更值集合
            </summary>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.#ctor">
            <summary>
            初始化领域层顶级基类
            </summary>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.SetValidationHandler(Spring.Validations.IValidationHandler)">
            <summary>
            设置验证处理器
            </summary>
            <param name="handler">验证处理器</param>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.AddValidationRules(System.Collections.Generic.IEnumerable{Spring.Validations.IValidationRule})">
            <summary>
            添加验证规则列表
            </summary>
            <param name="rules">验证规则列表</param>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.AddValidationRule(Spring.Validations.IValidationRule)">
            <summary>
            添加验证规则
            </summary>
            <param name="rule">验证规则</param>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.Validate">
            <summary>
            验证
            </summary>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.GetValidationResults">
            <summary>
            获取验证结果
            </summary>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.Validate(Spring.Validations.ValidationResultCollection)">
            <summary>
            验证并添加到验证结果集合
            </summary>
            <param name="results">验证结果集合</param>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.HandleValidationResults(Spring.Validations.ValidationResultCollection)">
            <summary>
            处理验证结果
            </summary>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.GetChanges(`0)">
            <summary>
            获取变更属性
            </summary>
            <param name="newEntity">新对象</param>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.AddChanges(`0)">
            <summary>
            添加变更列表
            </summary>
            <param name="newEntity">新对象</param>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.AddChange``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},``1)">
            <summary>
            添加变更
            </summary>
            <param name="expression">属性表达式,范例：t => t.Name</param>
            <param name="newValue">新值,范例：newEntity.Name</param>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.AddChange``1(System.String,System.String,``0,``0)">
            <summary>
            添加变更
            </summary>
            <param name="propertyName">属性名</param>
            <param name="description">描述</param>
            <param name="oldValue">旧值,范例：this.Name</param>
            <param name="newValue">新值,范例：newEntity.Name</param>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.AddChange``1(Spring.Domains.ICompareChange{``0},``0)">
            <summary>
            添加变更
            </summary>
            <param name="oldObject">旧对象</param>
            <param name="newObject">新对象</param>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.AddChange``1(System.Collections.Generic.IEnumerable{Spring.Domains.ICompareChange{``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加变更
            </summary>
            <param name="oldObjects">旧对象列表</param>
            <param name="newObjects">新对象列表</param>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.AddDescriptions">
            <summary>
            添加描述
            </summary>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.AddDescription(System.String)">
            <summary>
            添加描述
            </summary>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.AddDescription``1(System.String,``0)">
            <summary>
            添加描述
            </summary>
        </member>
        <member name="M:Spring.Domains.DomainBase`1.ToString">
            <summary>
            输出对象状态
            </summary>
        </member>
        <member name="T:Spring.Domains.EntityBase`1">
            <summary>
            领域实体
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Spring.Domains.EntityBase`1.#ctor(System.Guid)">
            <summary>
            初始化领域实体
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="T:Spring.Domains.EntityBase`2">
            <summary>
            领域实体
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TKey">标识类型</typeparam>
        </member>
        <member name="M:Spring.Domains.EntityBase`2.#ctor(`1)">
            <summary>
            初始化领域实体
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="P:Spring.Domains.EntityBase`2.Id">
            <summary>
            标识
            </summary>
        </member>
        <member name="M:Spring.Domains.EntityBase`2.Equals(System.Object)">
            <summary>
            相等运算
            </summary>
        </member>
        <member name="M:Spring.Domains.EntityBase`2.GetHashCode">
            <summary>
            获取哈希
            </summary>
        </member>
        <member name="M:Spring.Domains.EntityBase`2.op_Equality(Spring.Domains.EntityBase{`0,`1},Spring.Domains.EntityBase{`0,`1})">
            <summary>
            相等比较
            </summary>
        </member>
        <member name="M:Spring.Domains.EntityBase`2.op_Inequality(Spring.Domains.EntityBase{`0,`1},Spring.Domains.EntityBase{`0,`1})">
            <summary>
            不相等比较
            </summary>
        </member>
        <member name="M:Spring.Domains.EntityBase`2.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Spring.Domains.EntityBase`2.CreateId">
            <summary>
            创建标识
            </summary>
        </member>
        <member name="M:Spring.Domains.EntityBase`2.Validate(Spring.Validations.ValidationResultCollection)">
            <summary>
            验证
            </summary>
        </member>
        <member name="T:Spring.Domains.IAggregateRoot">
            <summary>
            聚合根
            </summary>
        </member>
        <member name="T:Spring.Domains.IAggregateRoot`1">
            <summary>
            聚合根
            </summary>
            <typeparam name="TKey">标识类型</typeparam>
        </member>
        <member name="T:Spring.Domains.IAggregateRoot`2">
            <summary>
            聚合根
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TKey">标识类型</typeparam>
        </member>
        <member name="T:Spring.Domains.ICompareChange`1">
            <summary>
            通过对象比较获取变更属性集
            </summary>
            <typeparam name="T">领域对象类型</typeparam>
        </member>
        <member name="M:Spring.Domains.ICompareChange`1.GetChanges(`0)">
            <summary>
            获取变更属性
            </summary>
            <param name="other">其它领域对象</param>
        </member>
        <member name="T:Spring.Domains.IDelete">
            <summary>
            逻辑删除
            </summary>
        </member>
        <member name="P:Spring.Domains.IDelete.IsDeleted">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="T:Spring.Domains.IDomainObject">
            <summary>
            领域对象
            </summary>
        </member>
        <member name="T:Spring.Domains.IEntity">
            <summary>
            实体
            </summary>
        </member>
        <member name="M:Spring.Domains.IEntity.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Spring.Domains.IEntity`1">
            <summary>
            实体
            </summary>
            <typeparam name="TKey">标识类型</typeparam>
        </member>
        <member name="T:Spring.Domains.IEntity`2">
            <summary>
            实体
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TKey">标识类型</typeparam>
        </member>
        <member name="T:Spring.Domains.IKey`1">
            <summary>
            标识
            </summary>
            <typeparam name="TKey">标识类型</typeparam>
        </member>
        <member name="P:Spring.Domains.IKey`1.Id">
            <summary>
            标识
            </summary>
        </member>
        <member name="T:Spring.Domains.IVersion">
            <summary>
            乐观锁
            </summary>
        </member>
        <member name="P:Spring.Domains.IVersion.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="T:Spring.Domains.Repositories.IPager">
            <summary>
            分页
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.IPager.GetPageCount">
            <summary>
            获取总页数
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.IPager.GetSkipCount">
            <summary>
            获取跳过的行数
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.IPager.Order">
            <summary>
            排序条件
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.IPager.GetStartNumber">
            <summary>
            获取起始行数
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.IPager.GetEndNumber">
            <summary>
            获取结束行数
            </summary>
        </member>
        <member name="T:Spring.Domains.Repositories.IPagerBase">
            <summary>
            分页
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.IPagerBase.Page">
            <summary>
            页数，即第几页，从1开始
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.IPagerBase.PageSize">
            <summary>
            每页显示行数
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.IPagerBase.TotalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="T:Spring.Domains.Repositories.Page">
            <summary>
            分页对象
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.Page.PageIndex">
            <summary>
            页索引，即第几页，从1开始
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.Page.PageSize">
            <summary>
            每页显示行数
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.Page.TotalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.Page.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.Page.HasNext">
             <summary>
            有无下一页（1:有,0:无）
             </summary>
        </member>
        <member name="T:Spring.Domains.Repositories.Pager">
            <summary>
            分页参数
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.Pager.#ctor">
            <summary>
            初始化分页参数
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.Pager.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            初始化分页参数
            </summary>
            <param name="page">页索引</param>
            <param name="pageSize">每页显示行数,默认20</param> 
            <param name="order">排序条件</param>
        </member>
        <member name="M:Spring.Domains.Repositories.Pager.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            初始化分页参数
            </summary>
            <param name="page">页索引</param>
            <param name="pageSize">每页显示行数,默认20</param> 
            <param name="totalCount">总行数</param>
            <param name="order">排序条件</param>
        </member>
        <member name="P:Spring.Domains.Repositories.Pager.Page">
            <summary>
            页索引，即第几页，从1开始
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.Pager.PageSize">
            <summary>
            每页显示行数
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.Pager.TotalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.Pager.GetPageCount">
            <summary>
            获取总页数
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.Pager.GetSkipCount">
            <summary>
            获取跳过的行数
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.Pager.Order">
            <summary>
            排序条件
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.Pager.GetStartNumber">
            <summary>
            起始行数
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.Pager.GetEndNumber">
            <summary>
            结束行数
            </summary>
        </member>
        <member name="F:Spring.Domains.Repositories.Pager._description">
            <summary>
            描述
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.Pager.ToString">
            <summary>
            输出对象状态
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.Pager.AddDescriptions">
            <summary>
            添加描述
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.Pager.AddDescription(System.String)">
            <summary>
            添加描述
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.Pager.AddDescription``1(System.String,``0)">
            <summary>
            添加描述
            </summary>
        </member>
        <member name="T:Spring.Domains.Repositories.PagerList`1">
            <summary>
            分页集合
            </summary>
            <typeparam name="T">元素类型</typeparam>
        </member>
        <member name="M:Spring.Domains.Repositories.PagerList`1.#ctor">
            <summary>
            初始化分页集合
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.PagerList`1.#ctor(System.Int32)">
            <summary>
            初始化分页集合
            </summary>
            <param name="totalCount">总行数</param>
        </member>
        <member name="M:Spring.Domains.Repositories.PagerList`1.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            初始化分页集合
            </summary>
            <param name="page">页索引</param>
            <param name="pageSize">每页显示行数</param>
            <param name="totalCount">总行数</param>
        </member>
        <member name="M:Spring.Domains.Repositories.PagerList`1.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            初始化分页集合
            </summary>
            <param name="page">页索引</param>
            <param name="pageSize">每页显示行数</param>
            <param name="totalCount">总行数</param>
            <param name="order">排序条件</param>
        </member>
        <member name="M:Spring.Domains.Repositories.PagerList`1.#ctor(Spring.Domains.Repositories.IPager)">
            <summary>
            初始化分页集合
            </summary>
            <param name="pager">查询对象</param>
        </member>
        <member name="P:Spring.Domains.Repositories.PagerList`1.PageIndex">
            <summary>
            页索引，即第几页，从1开始
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.PagerList`1.PageSize">
            <summary>
            每页显示行数
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.PagerList`1.TotalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.PagerList`1.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.PagerList`1.Order">
            <summary>
            排序条件
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.PagerList`1.Page">
             <summary>
            分页对象
             </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.PagerList`1.Data">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Spring.Domains.Repositories.PagerList`1.Item(System.Int32)">
            <summary>
            索引器
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:Spring.Domains.Repositories.PagerList`1.Add(`0)">
            <summary>
            添加元素
            </summary>
            <param name="item">元素</param>
        </member>
        <member name="M:Spring.Domains.Repositories.PagerList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            添加元素集合
            </summary>
            <param name="collection">元素集合</param>
        </member>
        <member name="M:Spring.Domains.Repositories.PagerList`1.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:Spring.Domains.Repositories.PagerList`1.Convert``1(System.Func{`0,``0})">
            <summary>
            转换分页集合的元素类型
            </summary>
            <typeparam name="TResult">目标元素类型</typeparam>
            <param name="converter">转换方法</param>
        </member>
        <member name="T:Spring.Domains.Sessions.ISession">
            <summary>
            用户会话
            </summary>
        </member>
        <member name="P:Spring.Domains.Sessions.ISession.UserId">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="T:Spring.Domains.Sessions.NullSession">
            <summary>
            空用户会话
            </summary>
        </member>
        <member name="P:Spring.Domains.Sessions.NullSession.UserId">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="T:Spring.Domains.Sessions.Session">
            <summary>
            用户会话
            </summary>
        </member>
        <member name="M:Spring.Domains.Sessions.Session.#ctor(System.String)">
            <summary>
            初始化用户会话
            </summary>
            <param name="userId">用户编号</param>
        </member>
        <member name="F:Spring.Domains.Sessions.Session.Null">
            <summary>
            空用户会话
            </summary>
        </member>
        <member name="P:Spring.Domains.Sessions.Session.UserId">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="T:Spring.Domains.Tenants.ITenant">
            <summary>
            租户
            </summary>
        </member>
        <member name="P:Spring.Domains.Tenants.ITenant.TenantId">
            <summary>
            租户编号
            </summary>
        </member>
        <member name="T:Spring.Domains.Trees.ITreeEntity`3">
            <summary>
            树型实体
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TKey">实体标识类型</typeparam>
            <typeparam name="TParentId">父编号类型</typeparam>
        </member>
        <member name="P:Spring.Domains.Trees.ITreeEntity`3.Parent">
            <summary>
            父对象
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.ITreeEntity`3.ParentId">
            <summary>
            父编号
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.ITreeEntity`3.Level">
            <summary>
            级数
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.ITreeEntity`3.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.ITreeEntity`3.SortId">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.ITreeEntity`3.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:Spring.Domains.Trees.ITreeEntity`3.InitPath">
            <summary>
            初始化路径
            </summary>
        </member>
        <member name="M:Spring.Domains.Trees.ITreeEntity`3.InitPath(`0)">
            <summary>
            初始化路径
            </summary>
            <param name="parent">父节点</param>
        </member>
        <member name="M:Spring.Domains.Trees.ITreeEntity`3.GetParentIdsFromPath(System.Boolean)">
            <summary>
            从路径中获取所有上级节点编号
            </summary>
            <param name="excludeSelf">是否排除当前节点,默认排除自身</param>
        </member>
        <member name="T:Spring.Domains.Trees.ITreeNode">
            <summary>
            树节点
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.ITreeNode.Id">
            <summary>
            标识
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.ITreeNode.ParentId">
            <summary>
            父标识
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.ITreeNode.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.ITreeNode.Level">
            <summary>
            级数
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.ITreeNode.Children">
            <summary>
            子节点集合
            </summary>
        </member>
        <member name="T:Spring.Domains.Trees.TreeEntityBase`3">
            <summary>
            树型实体
            </summary>
            <typeparam name="TEntity">树型实体类型</typeparam>
            <typeparam name="TKey">标识类型</typeparam>
            <typeparam name="TParentId">父编号类型</typeparam>
        </member>
        <member name="F:Spring.Domains.Trees.TreeEntityBase`3._parent">
            <summary>
            父对象
            </summary>
        </member>
        <member name="M:Spring.Domains.Trees.TreeEntityBase`3.#ctor(`1,System.String,System.Int32)">
            <summary>
            初始化树型实体
            </summary>
            <param name="id">标识</param>
            <param name="path">路径</param>
            <param name="level">级数</param>
        </member>
        <member name="P:Spring.Domains.Trees.TreeEntityBase`3.Parent">
            <summary>
            父对象
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.TreeEntityBase`3.ParentId">
            <summary>
            父编号
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.TreeEntityBase`3.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.TreeEntityBase`3.Level">
            <summary>
            级数
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.TreeEntityBase`3.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="P:Spring.Domains.Trees.TreeEntityBase`3.SortId">
            <summary>
            排序号
            </summary>
        </member>
        <member name="M:Spring.Domains.Trees.TreeEntityBase`3.InitPath">
            <summary>
            初始化路径
            </summary>
        </member>
        <member name="M:Spring.Domains.Trees.TreeEntityBase`3.InitPath(`0)">
            <summary>
            初始化路径
            </summary>
            <param name="parent">父节点</param>
        </member>
        <member name="M:Spring.Domains.Trees.TreeEntityBase`3.GetParentIdsFromPath(System.Boolean)">
            <summary>
            从路径中获取所有上级节点编号
            </summary>
            <param name="excludeSelf">是否排除当前节点,默认排除自身</param>
        </member>
        <member name="T:Spring.Domains.Trees.TreeEntityBase`1">
            <summary>
            树型实体
            </summary>
            <typeparam name="TEntity">树型实体类型</typeparam>
        </member>
        <member name="M:Spring.Domains.Trees.TreeEntityBase`1.#ctor(System.Guid,System.String,System.Int32)">
            <summary>
            初始化树型实体
            </summary>
            <param name="id">标识</param>
            <param name="path">路径</param>
            <param name="level">级数</param>
        </member>
        <member name="T:Spring.Domains.ValueObjectBase`1">
            <summary>
            值对象
            </summary>
            <typeparam name="TValueObject">值对象类型</typeparam>
        </member>
        <member name="M:Spring.Domains.ValueObjectBase`1.Equals(`0)">
            <summary>
            相等性比较
            </summary>
        </member>
        <member name="M:Spring.Domains.ValueObjectBase`1.Equals(System.Object)">
            <summary>
            相等性比较
            </summary>
        </member>
        <member name="M:Spring.Domains.ValueObjectBase`1.op_Equality(Spring.Domains.ValueObjectBase{`0},Spring.Domains.ValueObjectBase{`0})">
            <summary>
            相等性比较
            </summary>
        </member>
        <member name="M:Spring.Domains.ValueObjectBase`1.op_Inequality(Spring.Domains.ValueObjectBase{`0},Spring.Domains.ValueObjectBase{`0})">
            <summary>
            不相等比较
            </summary>
        </member>
        <member name="M:Spring.Domains.ValueObjectBase`1.GetHashCode">
            <summary>
            获取哈希
            </summary>
        </member>
        <member name="M:Spring.Domains.ValueObjectBase`1.Clone">
            <summary>
            克隆副本
            </summary>
        </member>
        <member name="T:Spring.Enum">
            <summary>
            枚举操作
            </summary>
        </member>
        <member name="M:Spring.Enum.GetInstance``1(System.Object)">
            <summary>
            获取实例
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="member">成员名或值,
            范例:Enum1枚举有成员A=0,则传入"A"或"0"获取 Enum1.A</param>
        </member>
        <member name="M:Spring.Enum.GetName``1(System.Object)">
            <summary>
            获取成员名
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="member">成员名、值、实例均可,
            范例:Enum1枚举有成员A=0,则传入Enum1.A或0,获取成员名"A"</param>
        </member>
        <member name="M:Spring.Enum.GetName(System.Type,System.Object)">
            <summary>
            获取成员名
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:Spring.Enum.GetValue``1(System.Object)">
            <summary>
            获取成员值
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="member">成员名、值、实例均可，
            范例:Enum1枚举有成员A=0,可传入"A"、0、Enum1.A，获取值0</param>
        </member>
        <member name="M:Spring.Enum.GetValue(System.Type,System.Object)">
            <summary>
            获取成员值
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:Spring.Enum.GetDescription``1(System.Object)">
            <summary>
            获取描述,使用System.ComponentModel.Description特性设置描述
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:Spring.Enum.GetDescription(System.Type,System.Object)">
            <summary>
            获取描述,使用System.ComponentModel.Description特性设置描述
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="T:Spring.Events.Event">
            <summary>
            事件
            </summary>
        </member>
        <member name="M:Spring.Events.Event.#ctor">
            <summary>
            初始化事件
            </summary>
        </member>
        <member name="P:Spring.Events.Event.Id">
            <summary>
            事件标识
            </summary>
        </member>
        <member name="P:Spring.Events.Event.Time">
            <summary>
            事件时间
            </summary>
        </member>
        <member name="M:Spring.Events.Event.ToString">
            <summary>
            输出日志
            </summary>
        </member>
        <member name="T:Spring.Events.Handlers.IEventHandler">
            <summary>
            事件处理器
            </summary>
        </member>
        <member name="T:Spring.Events.Handlers.IEventHandler`1">
            <summary>
            事件处理器
            </summary>
            <typeparam name="TEvent">事件类型</typeparam>
        </member>
        <member name="M:Spring.Events.Handlers.IEventHandler`1.Handle(`0)">
            <summary>
            处理事件
            </summary>
            <param name="event">事件</param>
        </member>
        <member name="T:Spring.Events.Handlers.IEventHandlerManager">
            <summary>
            事件处理器服务
            </summary>
        </member>
        <member name="M:Spring.Events.Handlers.IEventHandlerManager.GetHandlers``1">
            <summary>
            获取事件处理器列表
            </summary>
            <typeparam name="TEvent">事件类型</typeparam>
        </member>
        <member name="T:Spring.Events.IEvent">
            <summary>
            事件
            </summary>
        </member>
        <member name="P:Spring.Events.IEvent.Id">
            <summary>
            事件标识
            </summary>
        </member>
        <member name="P:Spring.Events.IEvent.Time">
            <summary>
            事件时间
            </summary>
        </member>
        <member name="T:Spring.Events.IEventBus">
            <summary>
            事件总线
            </summary>
        </member>
        <member name="M:Spring.Events.IEventBus.Publish``1(``0)">
            <summary>
            发布事件
            </summary>
            <typeparam name="TEvent">事件类型</typeparam>
            <param name="event">事件</param>
        </member>
        <member name="T:Spring.Events.Messages.IMessageEvent">
            <summary>
            消息事件
            </summary>
        </member>
        <member name="P:Spring.Events.Messages.IMessageEvent.Data">
            <summary>
            事件数据
            </summary>
        </member>
        <member name="P:Spring.Events.Messages.IMessageEvent.Target">
            <summary>
            发送目标
            </summary>
        </member>
        <member name="P:Spring.Events.Messages.IMessageEvent.Callback">
            <summary>
            回调
            </summary>
        </member>
        <member name="T:Spring.Events.Messages.IMessageEventBus">
            <summary>
            消息事件总线
            </summary>
        </member>
        <member name="M:Spring.Events.Messages.IMessageEventBus.Publish``1(``0)">
            <summary>
            发布事件
            </summary>
            <typeparam name="TEvent">事件类型</typeparam>
            <param name="event">事件</param>
        </member>
        <member name="T:Spring.Events.Messages.MessageEvent">
            <summary>
            消息事件
            </summary>
        </member>
        <member name="P:Spring.Events.Messages.MessageEvent.Data">
            <summary>
            事件数据
            </summary>
        </member>
        <member name="P:Spring.Events.Messages.MessageEvent.Target">
            <summary>
            发送目标
            </summary>
        </member>
        <member name="P:Spring.Events.Messages.MessageEvent.Callback">
            <summary>
            回调
            </summary>
        </member>
        <member name="M:Spring.Events.Messages.MessageEvent.ToString">
            <summary>
            输出日志
            </summary>
        </member>
        <member name="T:Spring.Exceptions.ConcurrencyException">
            <summary>
            并发异常
            </summary>
        </member>
        <member name="M:Spring.Exceptions.ConcurrencyException.#ctor">
            <summary>
            初始化并发异常
            </summary>
        </member>
        <member name="M:Spring.Exceptions.ConcurrencyException.#ctor(System.String)">
            <summary>
            初始化并发异常
            </summary>
            <param name="message">错误消息</param>
        </member>
        <member name="M:Spring.Exceptions.ConcurrencyException.#ctor(System.Exception)">
            <summary>
            初始化并发异常
            </summary>
            <param name="exception">异常</param>
        </member>
        <member name="M:Spring.Exceptions.ConcurrencyException.#ctor(System.String,System.Exception)">
            <summary>
            初始化并发异常
            </summary>
            <param name="message">错误消息</param>
            <param name="exception">异常</param>
        </member>
        <member name="M:Spring.Exceptions.ConcurrencyException.#ctor(System.String,System.Exception,System.String)">
            <summary>
            初始化并发异常
            </summary>
            <param name="message">错误消息</param>
            <param name="exception">异常</param>
            <param name="code">错误码</param>
        </member>
        <member name="T:Spring.Exceptions.ExceptionPrompt">
            <summary>
            异常提示
            </summary>
        </member>
        <member name="M:Spring.Exceptions.ExceptionPrompt.#ctor">
            <summary>
            初始化异常提示
            </summary>
        </member>
        <member name="F:Spring.Exceptions.ExceptionPrompt._prompts">
            <summary>
            异常提示组件集合
            </summary>
        </member>
        <member name="F:Spring.Exceptions.ExceptionPrompt.SingleInstance">
            <summary>
            单实例
            </summary>
        </member>
        <member name="P:Spring.Exceptions.ExceptionPrompt.Instance">
            <summary>
            获取异常提示实例
            </summary>
        </member>
        <member name="M:Spring.Exceptions.ExceptionPrompt.GetPrompt(System.Exception)">
            <summary>
            获取异常提示
            </summary>
            <param name="exception">异常</param>
        </member>
        <member name="M:Spring.Exceptions.ExceptionPrompt.GetSystemExceptionPrompt(System.Exception)">
            <summary>
            获取系统异常提示
            </summary>
        </member>
        <member name="T:Spring.Exceptions.IExceptionPrompt">
            <summary>
            异常提示
            </summary>
        </member>
        <member name="M:Spring.Exceptions.IExceptionPrompt.GetPrompt(System.Exception)">
            <summary>
            获取异常提示
            </summary>
            <param name="exception">异常</param>
        </member>
        <member name="T:Spring.Exceptions.Prompts.ConcurrencyExceptionPrompt">
            <summary>
            并发异常提示
            </summary>
        </member>
        <member name="M:Spring.Exceptions.Prompts.ConcurrencyExceptionPrompt.GetPrompt(System.Exception)">
            <summary>
            获取异常提示
            </summary>
            <param name="exception">异常</param>
        </member>
        <member name="T:Spring.Exceptions.Warning">
            <summary>
            应用程序异常
            </summary>
        </member>
        <member name="F:Spring.Exceptions.Warning._message">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="M:Spring.Exceptions.Warning.#ctor(System.String)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="message">错误消息</param>
        </member>
        <member name="M:Spring.Exceptions.Warning.#ctor(System.Exception)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="exception">异常</param>
        </member>
        <member name="M:Spring.Exceptions.Warning.#ctor(System.String,System.String)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="message">错误消息</param>
            <param name="code">错误码</param>
        </member>
        <member name="M:Spring.Exceptions.Warning.#ctor(System.String,System.String,System.Exception)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="message">错误消息</param>
            <param name="code">错误码</param>
            <param name="exception">异常</param>
        </member>
        <member name="M:Spring.Exceptions.Warning.#ctor(System.String,Spring.ApplicationServices.StateCode)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="message">错误消息</param>
            <param name="stateCode">状态码</param>
        </member>
        <member name="M:Spring.Exceptions.Warning.#ctor(System.String,Spring.ApplicationServices.StateCode,System.Exception)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="message">错误消息</param>
            <param name="stateCode">状态码</param>
            <param name="exception">异常</param>
        </member>
        <member name="M:Spring.Exceptions.Warning.#ctor(System.String,Spring.ApplicationServices.StateCode,Microsoft.Extensions.Logging.LogLevel,System.Exception)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="message">错误消息</param>
            <param name="stateCode">状态码</param>
            <param name="level">日志级别</param>
            <param name="exception">异常</param>
        </member>
        <member name="M:Spring.Exceptions.Warning.GetMessage">
            <summary>
            获取错误消息
            </summary>
        </member>
        <member name="M:Spring.Exceptions.Warning.AppendSelfMessage(System.Text.StringBuilder)">
            <summary>
            添加外层异常消息
            </summary>
        </member>
        <member name="M:Spring.Exceptions.Warning.AppendInnerMessage(System.Text.StringBuilder,System.Exception)">
            <summary>
            添加内部异常消息
            </summary>
        </member>
        <member name="M:Spring.Exceptions.Warning.AppendData(System.Text.StringBuilder,System.Exception)">
            <summary>
            添加额外数据
            </summary>
        </member>
        <member name="P:Spring.Exceptions.Warning.Message">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:Spring.Exceptions.Warning.Code">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Spring.Exceptions.Warning.StateCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Spring.Exceptions.Warning.StackTrace">
            <summary>
            堆栈跟踪
            </summary>
        </member>
        <member name="M:Spring.Exceptions.Warning.GetPrompt(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            获取友情提示
            </summary>
            <param name="level">日志级别</param>
        </member>
        <member name="M:Spring.Exports.ContentType.GetContentType(System.String)">
            <summary>
            获取文件后缀名匹配的内容类型
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Spring.Exports.ContentType.GetMimeTypes">
            <summary>
            获取MimeTypes
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spring.Exports.DefaultExportFactory">
            <summary>
            文件导出操作工厂
            </summary>
        </member>
        <member name="M:Spring.Exports.DefaultExportFactory.Create(Spring.Exports.ExportFormat)">
            <summary>
            创建文件导出操作
            </summary>
            <param name="format">导出格式</param>
        </member>
        <member name="T:Spring.Exports.ExcelExport">
            <summary>
            导出Excel
            </summary>
        </member>
        <member name="M:Spring.Exports.ExcelExport.#ctor(Spring.Exports.ExportFormat,Spring.Offices.IExcel)">
            <summary>
            初始化Excel导出
            </summary>
            <param name="format">导出格式</param>
            <param name="excel">Excel操作</param>
        </member>
        <member name="F:Spring.Exports.ExcelExport._excel">
            <summary>
            Excel操作
            </summary>
        </member>
        <member name="M:Spring.Exports.ExcelExport.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:Spring.Exports.ExcelExport.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:Spring.Exports.ExcelExport.WriteStream(System.IO.Stream)">
            <summary>
            写入流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:Spring.Exports.ExcelExport.AddHeader">
            <summary>
            添加表头
            </summary>
        </member>
        <member name="M:Spring.Exports.ExcelExport.CreateRows(System.Collections.Generic.IEnumerable{Spring.Offices.Row})">
            <summary>
            创建行
            </summary>
        </member>
        <member name="M:Spring.Exports.ExcelExport.AddBody">
            <summary>
            添加正文
            </summary>
        </member>
        <member name="M:Spring.Exports.ExcelExport.AddFoot">
            <summary>
            添加页脚
            </summary>
        </member>
        <member name="T:Spring.Exports.ExportBase">
            <summary>
            导出
            </summary>
        </member>
        <member name="M:Spring.Exports.ExportBase.#ctor(Spring.Exports.ExportFormat)">
            <summary>
            初始化导出
            </summary>
            <param name="format">导出格式</param>
        </member>
        <member name="F:Spring.Exports.ExportBase.Table">
            <summary>
            表
            </summary>
        </member>
        <member name="F:Spring.Exports.ExportBase._format">
            <summary>
            导出格式
            </summary>
        </member>
        <member name="F:Spring.Exports.ExportBase._headStyle">
            <summary>
            表头样式
            </summary>
        </member>
        <member name="F:Spring.Exports.ExportBase._bodyStyle">
            <summary>
            正文样式
            </summary>
        </member>
        <member name="F:Spring.Exports.ExportBase._footStyle">
            <summary>
            页脚样式
            </summary>
        </member>
        <member name="M:Spring.Exports.ExportBase.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.HeadStyle(Spring.Offices.CellStyle)">
            <summary>
            设置表头样式
            </summary>
            <param name="style">表头单元格样式</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.GetHeadStyle">
            <summary>
            获取表头样式
            </summary>
        </member>
        <member name="M:Spring.Exports.ExportBase.BodyStyle(Spring.Offices.CellStyle)">
            <summary>
            设置正文样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.GetBodyStyle">
            <summary>
            获取正文样式
            </summary>
        </member>
        <member name="M:Spring.Exports.ExportBase.FootStyle(Spring.Offices.CellStyle)">
            <summary>
            设置页脚样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.GetFootStyle">
            <summary>
            获取页脚样式
            </summary>
        </member>
        <member name="M:Spring.Exports.ExportBase.Head(System.String[])">
            <summary>
            添加表头
            </summary>
            <param name="titles">列标题</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.Head(Spring.Offices.Cell[])">
            <summary>
            添加表头
            </summary>
            <param name="cells">表头</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.Body``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.Body``1(System.Collections.Generic.IEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object[]}})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
            <param name="propertiesExpression">属性表达式</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.Body``1(System.Collections.Generic.IEnumerable{``0},System.String[])">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
            <param name="propertyNames">属性列表</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.AddEntity``1(``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            添加实体
            </summary>
        </member>
        <member name="M:Spring.Exports.ExportBase.GetPropertyValues``1(``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取属性值集合
            </summary>
        </member>
        <member name="M:Spring.Exports.ExportBase.AdjustColumnWidth``1(``0,System.String[])">
            <summary>
            调整列宽
            </summary>
        </member>
        <member name="M:Spring.Exports.ExportBase.AdjustColumnWidth(System.Reflection.PropertyInfo,System.Int32)">
            <summary>
            调整列宽
            </summary>
        </member>
        <member name="M:Spring.Exports.ExportBase.Foot(System.String[])">
            <summary>
            添加页脚
            </summary>
            <param name="values">值</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.Foot(Spring.Offices.Cell[])">
            <summary>
            添加页脚
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.Write(System.String,System.String)">
            <summary>
            写入文件
            </summary>
            <param name="directory">目录，不包括文件名</param>
            <param name="fileName">文件名，不包括扩展名</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.GetFilePath(System.String,System.String)">
            <summary>
            获取文件路径
            </summary>
        </member>
        <member name="M:Spring.Exports.ExportBase.GetFileName(System.String)">
            <summary>
            获取文件名
            </summary>
        </member>
        <member name="M:Spring.Exports.ExportBase.WriteStream(System.IO.Stream)">
            <summary>
            写入流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:Spring.Exports.ExportBase.ReadContent">
            <summary>
            读取文件内容
            </summary>
        </member>
        <member name="T:Spring.Exports.ExportFormat">
            <summary>
            导出格式
            </summary>
        </member>
        <member name="F:Spring.Exports.ExportFormat.Xls">
            <summary>
            Excel 2003
            </summary>
        </member>
        <member name="F:Spring.Exports.ExportFormat.Xlsx">
            <summary>
            Excel 2007
            </summary>
        </member>
        <member name="T:Spring.Exports.IExport">
            <summary>
            文件导出
            </summary>
        </member>
        <member name="M:Spring.Exports.IExport.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:Spring.Exports.IExport.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:Spring.Exports.IExport.HeadStyle(Spring.Offices.CellStyle)">
            <summary>
            设置表头样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:Spring.Exports.IExport.BodyStyle(Spring.Offices.CellStyle)">
            <summary>
            设置正文样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:Spring.Exports.IExport.FootStyle(Spring.Offices.CellStyle)">
            <summary>
            设置页脚样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:Spring.Exports.IExport.Head(System.String[])">
            <summary>
            添加表头
            </summary>
            <param name="titles">列标题</param>
        </member>
        <member name="M:Spring.Exports.IExport.Head(Spring.Offices.Cell[])">
            <summary>
            添加表头
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:Spring.Exports.IExport.Body``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
        </member>
        <member name="M:Spring.Exports.IExport.Body``1(System.Collections.Generic.IEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object[]}})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
            <param name="propertiesExpression">属性列表表达式，范例：t => new object[]{t.A,t.B}</param>
        </member>
        <member name="M:Spring.Exports.IExport.Body``1(System.Collections.Generic.IEnumerable{``0},System.String[])">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
            <param name="propertyNames">属性列表,范例："A","B"</param>
        </member>
        <member name="M:Spring.Exports.IExport.Foot(System.String[])">
            <summary>
            添加页脚
            </summary>
            <param name="values">值</param>
        </member>
        <member name="M:Spring.Exports.IExport.Foot(Spring.Offices.Cell[])">
            <summary>
            添加页脚
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:Spring.Exports.IExport.Write(System.String,System.String)">
            <summary>
            写入文件
            </summary>
            <param name="directory">目录，不包括文件名</param>
            <param name="fileName">文件名，不包括扩展名</param>
        </member>
        <member name="M:Spring.Exports.IExport.ReadContent">
            <summary>
            读取文件内容
            </summary>
        </member>
        <member name="T:Spring.Exports.IExportFactory">
            <summary>
            文件导出操作工厂
            </summary>
        </member>
        <member name="M:Spring.Exports.IExportFactory.Create(Spring.Exports.ExportFormat)">
            <summary>
            创建文件导出操作
            </summary>
            <param name="format">导出格式</param>
        </member>
        <member name="T:Spring.Exports.NpoiMemoryStream">
            <summary>
            NPOI文件流
            </summary>
        </member>
        <member name="T:Spring.Expressions.ParameterRebinder">
            <summary>
            参数重绑定操作
            </summary>
        </member>
        <member name="F:Spring.Expressions.ParameterRebinder._map">
            <summary>
            参数字典
            </summary>
        </member>
        <member name="M:Spring.Expressions.ParameterRebinder.#ctor(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression})">
            <summary>
            初始化参数重绑定操作
            </summary>
            <param name="map">参数字典</param>
        </member>
        <member name="M:Spring.Expressions.ParameterRebinder.ReplaceParameters(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression)">
            <summary>
            替换参数
            </summary>
            <param name="map">参数字典</param>
            <param name="exp">表达式</param>
        </member>
        <member name="M:Spring.Expressions.ParameterRebinder.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            访问参数
            </summary>
            <param name="parameterExpression">参数</param>
        </member>
        <member name="T:Spring.Expressions.PredicateExpressionBuilder`1">
            <summary>
            谓词表达式生成器
            </summary>
        </member>
        <member name="M:Spring.Expressions.PredicateExpressionBuilder`1.#ctor">
            <summary>
            初始化谓词表达式生成器
            </summary>
        </member>
        <member name="F:Spring.Expressions.PredicateExpressionBuilder`1._parameter">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:Spring.Expressions.PredicateExpressionBuilder`1._result">
            <summary>
            结果表达式
            </summary>
        </member>
        <member name="M:Spring.Expressions.PredicateExpressionBuilder`1.GetParameter">
            <summary>
            获取参数
            </summary>
        </member>
        <member name="M:Spring.Expressions.PredicateExpressionBuilder`1.Append``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Spring.Datas.Queries.Operator,System.Object)">
            <summary>
            添加表达式
            </summary>
            <param name="property">属性表达式</param>
            <param name="operator">运算符</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Expressions.PredicateExpressionBuilder`1.Append(System.String,Spring.Datas.Queries.Operator,System.Object)">
            <summary>
            添加表达式
            </summary>
            <param name="property">属性名</param>
            <param name="operator">运算符</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Expressions.PredicateExpressionBuilder`1.ToLambda">
            <summary>
            转换为Lambda表达式
            </summary>
        </member>
        <member name="T:Spring.File">
            <summary>
            文件及流操作
            </summary>
            <summary>
            文件及流操作 - 文件路径操作
            </summary>
            <summary>
            文件及流操作 - 流类型转换
            </summary>
        </member>
        <member name="M:Spring.File.Read(System.String)">
            <summary>
            读取文件到字符串
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:Spring.File.Read(System.String,System.Text.Encoding)">
            <summary>
            读取文件到字符串
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:Spring.File.ReadToBytes(System.String)">
            <summary>
            将文件读取到字节流中
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:Spring.File.Write(System.String,System.String)">
            <summary>
            将字符串写入文件,文件不存在则创建
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">数据</param>
        </member>
        <member name="M:Spring.File.Write(System.String,System.Byte[])">
            <summary>
            将字节流写入文件,文件不存在则创建
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="bytes">数据</param>
        </member>
        <member name="M:Spring.File.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            删除文件
            </summary>
            <param name="filePaths">文件集合的绝对路径</param>
        </member>
        <member name="M:Spring.File.Delete(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:Spring.File.GetAllFiles(System.String)">
            <summary>
            获取目录中全部文件列表，包括子目录
            </summary>
            <param name="directoryPath">目录绝对路径</param>
        </member>
        <member name="M:Spring.File.JoinPath(System.String,System.String)">
            <summary>
            连接基路径和子路径,比如把 c: 与 test.doc 连接成 c:\test.doc
            </summary>
            <param name="basePath">基路径,范例：c:</param>
            <param name="subPath">子路径,可以是文件名, 范例：test.doc</param>
        </member>
        <member name="M:Spring.File.StreamToString(System.IO.Stream)">
            <summary>
            流转换成字符串
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:Spring.File.StreamToString(System.IO.Stream,System.Text.Encoding)">
            <summary>
            流转换成字符串
            </summary>
            <param name="data">数据</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:Spring.File.StringToStream(System.String)">
            <summary>
            字符串转换成流
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:Spring.File.StringToStream(System.String,System.Text.Encoding)">
            <summary>
            字符串转换成流
            </summary>
            <param name="data">数据</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:Spring.File.StringToBytes(System.String)">
            <summary>
            字符串转换成字节数组
            </summary>
            <param name="data">数据,默认字符编码utf-8</param>        
        </member>
        <member name="M:Spring.File.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            字符串转换成字节数组
            </summary>
            <param name="data">数据</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:Spring.File.BytesToString(System.Byte[])">
            <summary>
            字节数组转换成字符串
            </summary>
            <param name="data">数据,默认字符编码utf-8</param>        
        </member>
        <member name="M:Spring.File.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            字节数组转换成字符串
            </summary>
            <param name="data">数据</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:Spring.File.BytesToInt(System.Byte[])">
            <summary>
            字节数组转换成整数
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:Spring.File.StreamToBytes(System.IO.Stream)">
            <summary>
            流转换为字节流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="T:Spring.Files.DefaultFileStore">
            <summary>
            本地文件存储服务
            </summary>
        </member>
        <member name="F:Spring.Files.DefaultFileStore._generator">
            <summary>
            路径生成器
            </summary>
        </member>
        <member name="M:Spring.Files.DefaultFileStore.#ctor(Spring.Files.Paths.IPathGenerator)">
            <summary>
            初始化本地文件存储服务
            </summary>
            <param name="pathGenerator">路径生成器</param>
        </member>
        <member name="M:Spring.Files.DefaultFileStore.Save(System.Byte[],System.String)">
            <summary>
            保存文件,返回完整文件路径
            </summary>
            <param name="stream">文件流</param>
            <param name="fileName">文件名，包含扩展名</param>
        </member>
        <member name="T:Spring.Files.IFileStore">
            <summary>
            文件存储服务
            </summary>
        </member>
        <member name="M:Spring.Files.IFileStore.Save(System.Byte[],System.String)">
            <summary>
            保存文件,返回完整文件路径
            </summary>
            <param name="stream">文件流</param>
            <param name="fileName">文件名，必须包含扩展名，如果仅传入扩展名则生成随机文件名</param>
        </member>
        <member name="T:Spring.Files.Paths.DefaultPathGenerator">
            <summary>
            路径生成器
            </summary>
        </member>
        <member name="F:Spring.Files.Paths.DefaultPathGenerator._basePath">
            <summary>
            path
            </summary>
        </member>
        <member name="M:Spring.Files.Paths.DefaultPathGenerator.#ctor(System.String,Spring.Randoms.IRandomGenerator)">
            <summary>
            初始化路径生成器
            </summary>
            <param name="basePath">基础路径</param>
            <param name="randomGenerator">随机数生成器</param>
        </member>
        <member name="M:Spring.Files.Paths.DefaultPathGenerator.GeneratePath(System.String)">
            <summary>
            创建完整路径
            </summary>
            <param name="fileName">被处理过的安全有效的文件名</param>
        </member>
        <member name="T:Spring.Files.Paths.IPathGenerator">
            <summary>
            路径生成器
            </summary>
        </member>
        <member name="M:Spring.Files.Paths.IPathGenerator.Data(System.String,System.String)">
            <summary>
            添加路径参数
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Files.Paths.IPathGenerator.Generate(System.String)">
            <summary>
            生成完整路径
            </summary>
            <param name="fileName">文件名，必须包含扩展名，如果仅传入扩展名则生成随机文件名</param>
        </member>
        <member name="T:Spring.Files.Paths.PathGeneratorBase">
            <summary>
            路径生成器
            </summary>
        </member>
        <member name="P:Spring.Files.Paths.PathGeneratorBase.Parameters">
            <summary>
            路径参数
            </summary>
        </member>
        <member name="F:Spring.Files.Paths.PathGeneratorBase._randomGenerator">
            <summary>
            随机数生成器
            </summary>
        </member>
        <member name="M:Spring.Files.Paths.PathGeneratorBase.#ctor(Spring.Randoms.IRandomGenerator)">
            <summary>
            初始化路径生成器
            </summary>
            <param name="randomGenerator">随机数生成器</param>
        </member>
        <member name="M:Spring.Files.Paths.PathGeneratorBase.Data(System.String,System.String)">
            <summary>
            添加路径参数
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Files.Paths.PathGeneratorBase.Generate(System.String)">
            <summary>
            生成完整路径
            </summary>
            <param name="fileName">文件名，必须包含扩展名，如果仅传入扩展名则生成随机文件名</param>
        </member>
        <member name="M:Spring.Files.Paths.PathGeneratorBase.GeneratePath(System.String)">
            <summary>
            创建完整路径
            </summary>
            <param name="fileName">被处理过的安全有效的文件名</param>
        </member>
        <member name="M:Spring.Files.Paths.PathGeneratorBase.GetFileName(System.String)">
            <summary>
            获取文件名
            </summary>
        </member>
        <member name="T:Spring.Helpers.Async">
            <summary>
            异步操作
            </summary>
        </member>
        <member name="M:Spring.Helpers.Async.Run(System.Action)">
            <summary>
            执行
            </summary>
            <param name="action">操作,范例：Async.Run( async () => await SendAsync() );</param>
        </member>
        <member name="M:Spring.Helpers.Async.Run(System.Func{System.Threading.Tasks.Task})">
            <summary>
            执行
            </summary>
            <param name="action">操作,范例：Async.Run( async () => await SendAsync() );</param>
        </member>
        <member name="M:Spring.Helpers.Async.Run``1(System.Func{``0})">
            <summary>
            执行
            </summary>
            <typeparam name="TResult">返回类型</typeparam>
            <param name="action">操作,范例：Async.Run( async () => await SendAsync() );</param>
        </member>
        <member name="M:Spring.Helpers.Async.Run``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            执行
            </summary>
            <typeparam name="TResult">返回类型</typeparam>
            <param name="action">操作,范例：Async.Run( async () => await SendAsync() );</param>
        </member>
        <member name="T:Spring.Helpers.Common">
            <summary>
            常用公共操作
            </summary>
        </member>
        <member name="M:Spring.Helpers.Common.GetType``1">
            <summary>
            获取类型
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="P:Spring.Helpers.Common.Line">
            <summary>
            换行符
            </summary>
        </member>
        <member name="T:Spring.Helpers.Const">
            <summary>
            常量
            </summary>
        </member>
        <member name="F:Spring.Helpers.Const.ChinesePinYin">
            <summary>
            汉字及拼音首字母
            </summary>
        </member>
        <member name="F:Spring.Helpers.Const.SimplifiedChinese">
            <summary>
            常用简体汉字
            </summary>
        </member>
        <member name="F:Spring.Helpers.Const.Letters">
            <summary>
            英文字母
            </summary>
        </member>
        <member name="F:Spring.Helpers.Const.Numbers">
            <summary>
            数字
            </summary>
        </member>
        <member name="T:Spring.Helpers.Convert">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="M:Spring.Helpers.Convert.ToInt(System.Object)">
            <summary>
            转换为32位整型
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToIntOrNull(System.Object)">
            <summary>
            转换为32位可空整型
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToLong(System.Object)">
            <summary>
            转换为64位整型
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToLongOrNull(System.Object)">
            <summary>
            转换为64位可空整型
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToFloat(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为32位浮点型,并按指定小数位舍入
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToFloatOrNull(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为32位可空浮点型,并按指定小数位舍入
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToDouble(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为64位浮点型,并按指定小数位舍入，温馨提示：4舍6入5成双
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToDoubleOrNull(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为64位可空浮点型,并按指定小数位舍入，温馨提示：4舍6入5成双
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToDecimal(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为128位浮点型,并按指定小数位舍入，温馨提示：4舍6入5成双
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToDecimalOrNull(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为128位可空浮点型,并按指定小数位舍入，温馨提示：4舍6入5成双
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToBool(System.Object)">
            <summary>
            转换为布尔值
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToBoolOrNull(System.Object)">
            <summary>
            转换为可空布尔值
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Helpers.Convert.GetBool(System.Object)">
            <summary>
            获取布尔值
            </summary>
        </member>
        <member name="M:Spring.Helpers.Convert.ToDate(System.Object)">
            <summary>
            转换为日期
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToDateOrNull(System.Object)">
            <summary>
            转换为可空日期
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToGuid(System.Object)">
            <summary>
            转换为Guid
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToGuidOrNull(System.Object)">
            <summary>
            转换为可空Guid
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToGuidList(System.String)">
            <summary>
            转换为Guid集合
            </summary>
            <param name="input">以逗号分隔的Guid集合字符串，范例:83B0233C-A24F-49FD-8083-1337209EBC9A,EAB523C6-2FE7-47BE-89D5-C6D440C3033A</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToList``1(System.String)">
            <summary>
            泛型集合转换
            </summary>
            <typeparam name="T">目标元素类型</typeparam>
            <param name="input">以逗号分隔的元素集合字符串，范例:83B0233C-A24F-49FD-8083-1337209EBC9A,EAB523C6-2FE7-47BE-89D5-C6D440C3033A</param>
        </member>
        <member name="M:Spring.Helpers.Convert.To``1(System.Object)">
            <summary>
            通用泛型转换
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="input">输入值</param>
        </member>
        <member name="M:Spring.Helpers.Convert.ToDictionaryList(System.Data.DataTable)">
            <summary>
            将DataTable转换为字典集合
            </summary>
            <param name="dataTable">需要转换的DataTable</param>
            <returns></returns>
        </member>
        <member name="T:Spring.Helpers.Encrypt">
            <summary>
            加密操作
            说明：
            1. AES加密整理自支付宝SDK
            2. RSA加密采用 https://github.com/stulzq/DotnetCore.RSA/blob/master/DotnetCore.RSA/RSAHelper.cs
            </summary>
        </member>
        <member name="M:Spring.Helpers.Encrypt.Md5By16(System.String)">
            <summary>
            Md5加密，返回16位结果
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.Md5By16(System.String,System.Text.Encoding)">
            <summary>
            Md5加密，返回16位结果
            </summary>
            <param name="value">值</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.Md5(System.String,System.Text.Encoding,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Md5加密
            </summary>
        </member>
        <member name="M:Spring.Helpers.Encrypt.Md5By32(System.String)">
            <summary>
            Md5加密，返回32位结果
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.Md5By32(System.String,System.Text.Encoding)">
            <summary>
            Md5加密，返回32位结果
            </summary>
            <param name="value">值</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.Md5Hash(System.String)">
            <summary>
            MD5加密字符串
            </summary>
            <param name="input">需要加密的字符</param>
            <returns></returns>
        </member>
        <member name="F:Spring.Helpers.Encrypt.DesKey">
            <summary>
            DES密钥,24位字符串
            </summary>
        </member>
        <member name="M:Spring.Helpers.Encrypt.DesEncrypt(System.Object)">
            <summary>
            DES加密
            </summary>
            <param name="value">待加密的值</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.DesEncrypt(System.Object,System.String)">
            <summary>
            DES加密
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥,24位</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.DesEncrypt(System.Object,System.String,System.Text.Encoding)">
            <summary>
            DES加密
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥,24位</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.ValidateDes(System.String,System.String)">
            <summary>
            验证Des加密参数
            </summary>
        </member>
        <member name="M:Spring.Helpers.Encrypt.CreateDesProvider(System.String)">
            <summary>
            创建Des加密服务提供程序
            </summary>
        </member>
        <member name="M:Spring.Helpers.Encrypt.GetEncryptResult(System.String,System.Text.Encoding,System.Security.Cryptography.ICryptoTransform)">
            <summary>
            获取加密结果
            </summary>
        </member>
        <member name="M:Spring.Helpers.Encrypt.DesDecrypt(System.Object)">
            <summary>
            DES解密
            </summary>
            <param name="value">加密后的值</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.DesDecrypt(System.Object,System.String)">
            <summary>
            DES解密
            </summary>
            <param name="value">加密后的值</param>
            <param name="key">密钥,24位</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.DesDecrypt(System.Object,System.String,System.Text.Encoding)">
            <summary>
            DES解密
            </summary>
            <param name="value">加密后的值</param>
            <param name="key">密钥,24位</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.GetDecryptResult(System.String,System.Text.Encoding,System.Security.Cryptography.ICryptoTransform)">
            <summary>
            获取解密结果
            </summary>
        </member>
        <member name="F:Spring.Helpers.Encrypt._iv">
            <summary>
            128位0向量
            </summary>
        </member>
        <member name="P:Spring.Helpers.Encrypt.Iv">
            <summary>
            128位0向量
            </summary>
        </member>
        <member name="F:Spring.Helpers.Encrypt.AesKey">
            <summary>
            AES密钥
            </summary>
        </member>
        <member name="M:Spring.Helpers.Encrypt.AesEncrypt(System.String)">
            <summary>
            AES加密
            </summary>
            <param name="value">待加密的值</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.AesEncrypt(System.String,System.String)">
            <summary>
            AES加密
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.AesEncrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            AES加密
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.CreateRijndaelManaged(System.String)">
            <summary>
            创建RijndaelManaged
            </summary>
        </member>
        <member name="M:Spring.Helpers.Encrypt.AesDecrypt(System.String)">
            <summary>
            AES解密
            </summary>
            <param name="value">加密后的值</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.AesDecrypt(System.String,System.String)">
            <summary>
            AES解密
            </summary>
            <param name="value">加密后的值</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.AesDecrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            AES解密
            </summary>
            <param name="value">加密后的值</param>
            <param name="key">密钥</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.RsaSign(System.String,System.String)">
            <summary>
            RSA加密，采用 SHA1 算法
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.RsaSign(System.String,System.String,System.Text.Encoding)">
            <summary>
            RSA加密，采用 SHA1 算法
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.Rsa2Sign(System.String,System.String)">
            <summary>
            RSA加密，采用 SHA256 算法
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.Rsa2Sign(System.String,System.String,System.Text.Encoding)">
            <summary>
            RSA加密，采用 SHA256 算法
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:Spring.Helpers.Encrypt.RsaSign(System.String,System.String,System.Text.Encoding,Spring.Helpers.Internal.RSAType)">
            <summary>
            Rsa加密
            </summary>
        </member>
        <member name="T:Spring.Helpers.Enum">
            <summary>
            枚举操作
            </summary>
        </member>
        <member name="M:Spring.Helpers.Enum.Parse``1(System.Object)">
            <summary>
            获取实例
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="member">成员名或值,范例:Enum1枚举有成员A=0,则传入"A"或"0"获取 Enum1.A</param>
        </member>
        <member name="M:Spring.Helpers.Enum.GetName``1(System.Object)">
            <summary>
            获取成员名
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="member">成员名、值、实例均可,范例:Enum1枚举有成员A=0,则传入Enum1.A或0,获取成员名"A"</param>
        </member>
        <member name="M:Spring.Helpers.Enum.GetName(System.Type,System.Object)">
            <summary>
            获取成员名
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:Spring.Helpers.Enum.GetValue``1(System.Object)">
            <summary>
            获取成员值
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="member">成员名、值、实例均可，范例:Enum1枚举有成员A=0,可传入"A"、0、Enum1.A，获取值0</param>
        </member>
        <member name="M:Spring.Helpers.Enum.GetValue(System.Type,System.Object)">
            <summary>
            获取成员值
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:Spring.Helpers.Enum.GetDescription``1(System.Object)">
            <summary>
            获取描述,使用System.ComponentModel.Description特性设置描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:Spring.Helpers.Enum.GetDescription(System.Type,System.Object)">
            <summary>
            获取描述,使用System.ComponentModel.Description特性设置描述
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:Spring.Helpers.Enum.GetItems``1">
            <summary>
            获取描述项集合,文本设置为Description，值为Value
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
        </member>
        <member name="M:Spring.Helpers.Enum.ValidateEnum(System.Reflection.TypeInfo)">
            <summary>
            验证是否枚举类型
            </summary>
        </member>
        <member name="M:Spring.Helpers.Enum.AddItem``1(System.Collections.Generic.ICollection{Spring.Item},System.Reflection.FieldInfo)">
            <summary>
            添加描述项
            </summary>
        </member>
        <member name="T:Spring.Helpers.Id">
            <summary>
            Id生成器
            </summary>
        </member>
        <member name="F:Spring.Helpers.Id._id">
            <summary>
            Id
            </summary>
        </member>
        <member name="M:Spring.Helpers.Id.SetId(System.String)">
            <summary>
            设置Id
            </summary>
            <param name="id">Id</param>
        </member>
        <member name="M:Spring.Helpers.Id.Reset">
            <summary>
            重置Id
            </summary>
        </member>
        <member name="M:Spring.Helpers.Id.ObjectId">
            <summary>
            创建Id
            </summary>
        </member>
        <member name="M:Spring.Helpers.Id.Guid">
            <summary>
            用Guid创建Id,去掉分隔符
            </summary>
        </member>
        <member name="T:Spring.Helpers.Internal.ObjectId">
            <summary>
            Id生成器，代码出自：https://github.com/tangxuehua/ecommon/blob/master/src/ECommon/Utilities/ObjectId.cs
            </summary>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.#ctor(System.DateTime,System.Int32,System.Int16,System.Int32)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="timestamp">The timestamp (expressed as a DateTime).</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.#ctor(System.Int32,System.Int32,System.Int16,System.Int32)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Spring.Helpers.Internal.ObjectId.Empty">
            <summary>
            Gets an instance of ObjectId where the value is empty.
            </summary>
        </member>
        <member name="P:Spring.Helpers.Internal.ObjectId.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="P:Spring.Helpers.Internal.ObjectId.Machine">
            <summary>
            Gets the machine.
            </summary>
        </member>
        <member name="P:Spring.Helpers.Internal.ObjectId.Pid">
            <summary>
            Gets the PID.
            </summary>
        </member>
        <member name="P:Spring.Helpers.Internal.ObjectId.Increment">
            <summary>
            Gets the increment.
            </summary>
        </member>
        <member name="P:Spring.Helpers.Internal.ObjectId.CreationTime">
            <summary>
            Gets the creation time (derived from the timestamp).
            </summary>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.op_LessThan(Spring.Helpers.Internal.ObjectId,Spring.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is less than the second ObjectId.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.op_LessThanOrEqual(Spring.Helpers.Internal.ObjectId,Spring.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is less than or equal to the second ObjectId.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.op_Equality(Spring.Helpers.Internal.ObjectId,Spring.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are equal.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.op_Inequality(Spring.Helpers.Internal.ObjectId,Spring.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are not equal.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.op_GreaterThanOrEqual(Spring.Helpers.Internal.ObjectId,Spring.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is greather than or equal to the second ObjectId.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.op_GreaterThan(Spring.Helpers.Internal.ObjectId,Spring.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is greather than the second ObjectId.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.GenerateNewId">
            <summary>
            Generates a new ObjectId with a unique value.
            </summary>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.GenerateNewId(System.DateTime)">
            <summary>
            Generates a new ObjectId with a unique value (with the timestamp component based on a given DateTime).
            </summary>
            <param name="timestamp">The timestamp component (expressed as a DateTime).</param>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.GenerateNewId(System.Int32)">
            <summary>
            Generates a new ObjectId with a unique value (with the given timestamp).
            </summary>
            <param name="timestamp">The timestamp component.</param>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.GenerateNewStringId">
            <summary>
            Generates a new ObjectId string with a unique value.
            </summary>
            <returns>The string value of the new generated ObjectId.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.Pack(System.Int32,System.Int32,System.Int16,System.Int32)">
            <summary>
            Packs the components of an ObjectId into a byte array.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.Parse(System.String)">
            <summary>
            Parses a string and creates a new ObjectId.
            </summary>
            <param name="s">The string value.</param>
            <returns>A ObjectId.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.Unpack(System.Byte[],System.Int32@,System.Int32@,System.Int16@,System.Int32@)">
            <summary>
            Unpacks a byte array into the components of an ObjectId.
            </summary>
            <param name="bytes">A byte array.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.GetCurrentProcessId">
            <summary>
            Gets the current process id.  This method exists because of how CAS operates on the call stack, checking
            for permissions before executing the method.  Hence, if we inlined this call, the calling method would not execute
            before throwing an exception requiring the try/catch at an even higher level that we don't necessarily control.
            </summary>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.CompareTo(Spring.Helpers.Internal.ObjectId)">
            <summary>
            Compares this ObjectId to another ObjectId.
            </summary>
            <param name="other">The other ObjectId.</param>
            <returns>A 32-bit signed integer that indicates whether this ObjectId is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.Equals(Spring.Helpers.Internal.ObjectId)">
            <summary>
            Compares this ObjectId to another ObjectId.
            </summary>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are equal.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.Equals(System.Object)">
            <summary>
            Compares this ObjectId to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is an ObjectId and equal to this one.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.ToByteArray">
            <summary>
            Converts the ObjectId to a byte array.
            </summary>
            <returns>A byte array.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.ParseHexString(System.String)">
            <summary>
            Parses a hex string into its equivalent byte array.
            </summary>
            <param name="s">The hex string to parse.</param>
            <returns>The byte equivalent of the hex string.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.ToHexString(System.Byte[])">
            <summary>
            Converts a byte array to a hex string.
            </summary>
            <param name="bytes">The byte array.</param>
            <returns>A hex string.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.ToMillisecondsSinceEpoch(System.DateTime)">
            <summary>
            Converts a DateTime to number of milliseconds since Unix epoch.
            </summary>
            <param name="dateTime">A DateTime.</param>
            <returns>Number of seconds since Unix epoch.</returns>
        </member>
        <member name="M:Spring.Helpers.Internal.ObjectId.ToUniversalTime(System.DateTime)">
            <summary>
            Converts a DateTime to UTC (with special handling for MinValue and MaxValue).
            </summary>
            <param name="dateTime">A DateTime.</param>
            <returns>The DateTime in UTC.</returns>
        </member>
        <member name="T:Spring.Helpers.Internal.RsaHelper">
            <summary>
            RSA加解密 使用OpenSSL的公钥加密/私钥解密
            
            公私钥请使用openssl生成  ssh-keygen -t rsa 命令生成的公钥私钥是不行的
            
            作者：李志强
            时间：2017年10月30日15:50:14
            QQ:501232752
            </summary>
        </member>
        <member name="M:Spring.Helpers.Internal.RsaHelper.#ctor(Spring.Helpers.Internal.RSAType,System.Text.Encoding,System.String,System.String)">
            <summary>
            实例化RSAHelper
            </summary>
            <param name="rsaType">加密算法类型 RSA SHA1;RSA2 SHA256 密钥长度至少为2048</param>
            <param name="encoding">编码类型</param>
            <param name="privateKey">私钥</param>
            <param name="publicKey">公钥</param>
        </member>
        <member name="M:Spring.Helpers.Internal.RsaHelper.Sign(System.String)">
            <summary>
            使用私钥签名
            </summary>
            <param name="data">原始数据</param>
            <returns></returns>
        </member>
        <member name="M:Spring.Helpers.Internal.RsaHelper.Verify(System.String,System.String)">
            <summary>
            使用公钥验证签名
            </summary>
            <param name="data">原始数据</param>
            <param name="sign">签名</param>
            <returns></returns>
        </member>
        <member name="T:Spring.Helpers.Internal.RSAType">
            <summary>
            RSA算法类型
            </summary>
        </member>
        <member name="F:Spring.Helpers.Internal.RSAType.RSA">
            <summary>
            SHA1
            </summary>
        </member>
        <member name="F:Spring.Helpers.Internal.RSAType.RSA2">
            <summary>
            RSA2 密钥长度至少为2048
            SHA256
            </summary>
        </member>
        <member name="T:Spring.Helpers.Ioc">
            <summary>
            容器
            </summary>
        </member>
        <member name="F:Spring.Helpers.Ioc.DefaultContainer">
            <summary>
            默认容器
            </summary>
        </member>
        <member name="M:Spring.Helpers.Ioc.CreateContainer(Spring.Dependency.IConfig[])">
            <summary>
            创建容器
            </summary>
            <param name="configs">依赖配置</param>
        </member>
        <member name="M:Spring.Helpers.Ioc.CreateList``1(System.String)">
            <summary>
            创建集合
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Helpers.Ioc.CreateList``1(System.Type,System.String)">
            <summary>
            创建集合
            </summary>
            <typeparam name="TResult">返回类型</typeparam>
            <param name="type">对象类型</param>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Helpers.Ioc.Create``1(System.String)">
            <summary>
            创建实例
            </summary>
            <typeparam name="T">实例类型</typeparam>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Helpers.Ioc.Create``1(System.Type,System.String)">
            <summary>
            创建对象
            </summary>
            <typeparam name="TResult">返回类型</typeparam>
            <param name="type">对象类型</param>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Spring.Helpers.Ioc.BeginScope">
            <summary>
            作用域开始
            </summary>
        </member>
        <member name="M:Spring.Helpers.Ioc.Register(Spring.Dependency.IConfig[])">
            <summary>
            注册依赖
            </summary>
            <param name="configs">依赖配置</param>
        </member>
        <member name="M:Spring.Helpers.Ioc.Register(Microsoft.Extensions.DependencyInjection.IServiceCollection,Spring.Dependency.IConfig[])">
            <summary>
            注册依赖
            </summary>
            <param name="services">服务集合</param>
            <param name="configs">依赖配置</param>
        </member>
        <member name="M:Spring.Helpers.Ioc.Dispose">
            <summary>
            释放容器
            </summary>
        </member>
        <member name="T:Spring.Helpers.Json">
            <summary>
            Json操作
            </summary>
        </member>
        <member name="M:Spring.Helpers.Json.ToObject``1(System.String)">
            <summary>
            将Json字符串转换为对象
            </summary>
            <param name="json">Json字符串</param>
        </member>
        <member name="M:Spring.Helpers.Json.ToJson(System.Object,System.Boolean)">
            <summary>
            将对象转换为Json字符串
            </summary>
            <param name="target">目标对象</param>
            <param name="isConvertToSingleQuotes">是否将双引号转成单引号</param>
        </member>
        <member name="T:Spring.Helpers.Lambda">
            <summary>
            Lambda表达式操作
            </summary>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetMember(System.Linq.Expressions.Expression)">
            <summary>
            获取成员
            </summary>
            <param name="expression">表达式,范例：t => t.Name</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetMemberExpression(System.Linq.Expressions.Expression)">
            <summary>
            获取成员表达式
            </summary>
            <param name="expression">表达式</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetName(System.Linq.Expressions.Expression)">
            <summary>
            获取成员名称，范例：t => t.Name,返回 Name
            </summary>
            <param name="expression">表达式,范例：t => t.Name</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetMemberName(System.Linq.Expressions.MemberExpression)">
            <summary>
            获取成员名称
            </summary>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetNames``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object[]}})">
            <summary>
            获取名称列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="expression">属性集合表达式,范例：t => new object[]{t.A,t.B}</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.AddName(System.Collections.Generic.List{System.String},System.Linq.Expressions.Expression)">
            <summary>
            添加名称
            </summary>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetValue(System.Linq.Expressions.Expression)">
            <summary>
            获取值,范例：t => t.Name == "A",返回 A
            </summary>
            <param name="expression">表达式,范例：t => t.Name == "A"</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetMethodCallExpressionValue(System.Linq.Expressions.Expression)">
            <summary>
            获取方法调用表达式的值
            </summary>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetMemberValue(System.Linq.Expressions.MemberExpression)">
            <summary>
            获取属性表达式的值
            </summary>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetConstantExpressionValue(System.Linq.Expressions.Expression)">
            <summary>
            获取常量表达式的值
            </summary>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetParameter(System.Linq.Expressions.Expression)">
            <summary>
            获取参数，范例：t.Name,返回 t
            </summary>
            <param name="expression">表达式，范例：t.Name</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetConditionCount(System.Linq.Expressions.LambdaExpression)">
            <summary>
            获取查询条件个数
            </summary>
            <param name="expression">谓词表达式,范例1：t => t.Name == "A" ，结果1。
            范例2：t => t.Name == "A" &amp;&amp; t.Age =1 ，结果2。</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetAttribute``1(System.Linq.Expressions.Expression)">
            <summary>
            获取特性
            </summary>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="expression">属性表达式</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetAttribute``3(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            获取特性
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetAttribute``2(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            获取特性
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetAttributes``3(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            获取特性列表
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.Constant(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            获取常量表达式
            </summary>
            <param name="expression">表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.GetCriteriaCount(System.Linq.Expressions.LambdaExpression)">
            <summary>
            获取谓词条件的个数
            </summary>
            <param name="expression">谓词表达式,范例：t => t.Name == "A"</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.Equal``1(System.String,System.Object)">
            <summary>
            创建等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.CreateParameter``1">
            <summary>
            创建参数
            </summary>
        </member>
        <member name="M:Spring.Helpers.Lambda.NotEqual``1(System.String,System.Object)">
            <summary>
            创建不等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.Greater``1(System.String,System.Object)">
            <summary>
            创建大于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.GreaterEqual``1(System.String,System.Object)">
            <summary>
            创建大于等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.Less``1(System.String,System.Object)">
            <summary>
            创建小于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.LessEqual``1(System.String,System.Object)">
            <summary>
            创建小于等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.Starts``1(System.String,System.String)">
            <summary>
            调用StartsWith方法
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.Ends``1(System.String,System.String)">
            <summary>
            调用EndsWith方法
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.Contains``1(System.String,System.Object)">
            <summary>
            调用Contains方法
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.Lambda.ParsePredicate``1(System.String,System.Object,Spring.Datas.Queries.Operator)">
            <summary>
            解析为谓词表达式
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
            <param name="operator">运算符</param>
        </member>
        <member name="T:Spring.Helpers.Random">
            <summary>
            随机数操作
            </summary>
        </member>
        <member name="F:Spring.Helpers.Random._random">
            <summary>
            随机数
            </summary>
        </member>
        <member name="M:Spring.Helpers.Random.#ctor">
            <summary>
            初始化随机数
            </summary>
        </member>
        <member name="M:Spring.Helpers.Random.Next(System.Int32)">
            <summary>
            获取指定范围的随机整数
            </summary>
            <param name="max">最大值</param>
        </member>
        <member name="M:Spring.Helpers.Random.Next(System.Int32,System.Int32)">
            <summary>
            获取指定范围的随机整数，该范围包括最小值，但不包括最大值
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Spring.Helpers.Random.Sort``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            对集合随机排序
            </summary>
            <typeparam name="T">集合元素类型</typeparam>
            <param name="array">集合</param>
        </member>
        <member name="T:Spring.Helpers.Reflection">
            <summary>
            反射操作
            </summary>
        </member>
        <member name="M:Spring.Helpers.Reflection.GetDescription``1">
            <summary>
            获取类型描述，使用DescriptionAttribute设置描述
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:Spring.Helpers.Reflection.GetDescription``1(System.String)">
            <summary>
            获取类型成员描述，使用DescriptionAttribute设置描述
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="memberName">成员名称</param>
        </member>
        <member name="M:Spring.Helpers.Reflection.GetDescription(System.Type,System.String)">
            <summary>
            获取类型成员描述，使用DescriptionAttribute设置描述
            </summary>
            <param name="type">类型</param>
            <param name="memberName">成员名称</param>
        </member>
        <member name="M:Spring.Helpers.Reflection.GetDescription(System.Reflection.MemberInfo)">
            <summary>
            获取类型成员描述，使用DescriptionAttribute设置描述
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:Spring.Helpers.Reflection.GetDisplayName``1">
            <summary>
            获取类型显示名称，使用DisplayNameAttribute设置显示名称
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:Spring.Helpers.Reflection.GetDisplayName(System.Type)">
            <summary>
            获取类型显示名称，使用DisplayNameAttribute设置显示名称
            </summary>
        </member>
        <member name="M:Spring.Helpers.Reflection.GetDisplayNameOrDescription``1">
            <summary>
            获取类型显示名称或描述,使用DisplayNameAttribute设置显示名称,使用DescriptionAttribute设置描述
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:Spring.Helpers.Reflection.GetDisplayNameOrDescription(System.Reflection.PropertyInfo)">
            <summary>
            获取属性显示名称或描述,使用DisplayNameAttribute或DisplayAttribute设置显示名称,使用DescriptionAttribute设置描述
            </summary>
        </member>
        <member name="M:Spring.Helpers.Reflection.GetDisplayName(System.Reflection.PropertyInfo)">
            <summary>
            获取类型成员显示名称，使用DisplayNameAttribute或DisplayAttribute设置显示名称
            </summary>
        </member>
        <member name="M:Spring.Helpers.Reflection.GetTypesByInterface``1(System.Reflection.Assembly)">
            <summary>
            获取实现了接口的所有具体类型
            </summary>
            <typeparam name="TInterface">接口类型</typeparam>
            <param name="assembly">在该程序集中查找</param>
        </member>
        <member name="M:Spring.Helpers.Reflection.CreateInstance``1(System.Type,System.Object[])">
            <summary>
            动态创建实例
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="type">类型</param>
            <param name="parameters">传递给构造函数的参数</param>        
        </member>
        <member name="M:Spring.Helpers.Reflection.GetAssembly(System.String)">
            <summary>
            获取程序集
            </summary>
            <param name="assemblyName">程序集名称</param>
        </member>
        <member name="M:Spring.Helpers.Reflection.IsBool(System.Reflection.MemberInfo)">
            <summary>
            是否布尔类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:Spring.Helpers.Reflection.IsBool(System.Reflection.PropertyInfo)">
            <summary>
            是否布尔类型
            </summary>
        </member>
        <member name="M:Spring.Helpers.Reflection.IsEnum(System.Reflection.MemberInfo)">
            <summary>
            是否枚举类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:Spring.Helpers.Reflection.IsEnum(System.Reflection.PropertyInfo)">
            <summary>
            是否枚举类型
            </summary>
        </member>
        <member name="M:Spring.Helpers.Reflection.IsDate(System.Reflection.MemberInfo)">
            <summary>
            是否日期类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:Spring.Helpers.Reflection.IsDate(System.Reflection.PropertyInfo)">
            <summary>
            是否日期类型
            </summary>
        </member>
        <member name="M:Spring.Helpers.Reflection.IsInt(System.Reflection.MemberInfo)">
            <summary>
            是否整型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:Spring.Helpers.Reflection.IsInt(System.Reflection.PropertyInfo)">
            <summary>
            是否整型
            </summary>
        </member>
        <member name="M:Spring.Helpers.Reflection.IsNumber(System.Reflection.MemberInfo)">
            <summary>
            是否数值类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:Spring.Helpers.Reflection.IsNumber(System.Reflection.PropertyInfo)">
            <summary>
            是否数值类型
            </summary>
        </member>
        <member name="M:Spring.Helpers.Reflection.IsGenericCollection(System.Type)">
            <summary>
            是否泛型集合
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="M:Spring.Helpers.Reflection.GetAssemblies(System.String)">
            <summary>
            从目录中获取所有程序集
            </summary>
            <param name="directoryPath">目录绝对路径</param>
        </member>
        <member name="T:Spring.Helpers.String">
            <summary>
            字符串操作 - 字符串生成器
            </summary>
            <summary>
            字符串操作 - 工具
            </summary>
        </member>
        <member name="M:Spring.Helpers.String.#ctor">
            <summary>
            初始化字符串操作
            </summary>
        </member>
        <member name="P:Spring.Helpers.String.Builder">
            <summary>
            字符串生成器
            </summary>
        </member>
        <member name="M:Spring.Helpers.String.Append``1(``0)">
            <summary>
            追加内容
            </summary>
            <typeparam name="T">值的类型</typeparam>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.String.Append(System.String,System.Object[])">
            <summary>
            追加内容
            </summary>
            <param name="value">值</param>
            <param name="args">参数</param>
        </member>
        <member name="M:Spring.Helpers.String.AppendLine">
            <summary>
            追加内容并换行
            </summary>
        </member>
        <member name="M:Spring.Helpers.String.AppendLine``1(``0)">
            <summary>
            追加内容并换行
            </summary>
            <typeparam name="T">值的类型</typeparam>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.String.AppendLine(System.String,System.Object[])">
            <summary>
            追加内容并换行
            </summary>
            <param name="value">值</param>
            <param name="args">参数</param>
        </member>
        <member name="M:Spring.Helpers.String.Replace(System.String)">
            <summary>
            替换内容
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Helpers.String.RemoveEnd(System.String)">
            <summary>
            移除末尾字符串
            </summary>
            <param name="end">末尾字符串</param>
        </member>
        <member name="M:Spring.Helpers.String.Clear">
            <summary>
            清空字符串
            </summary>
        </member>
        <member name="P:Spring.Helpers.String.Length">
            <summary>
            字符串长度
            </summary>
        </member>
        <member name="P:Spring.Helpers.String.Empty">
            <summary>
            空字符串
            </summary>
        </member>
        <member name="M:Spring.Helpers.String.ToString">
            <summary>
            转换为字符串
            </summary>
        </member>
        <member name="M:Spring.Helpers.String.Join``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            将集合连接为带分隔符的字符串
            </summary>
            <typeparam name="T">集合元素类型</typeparam>
            <param name="list">集合</param>
            <param name="quotes">引号，默认不带引号，范例：单引号 "'"</param>
            <param name="separator">分隔符，默认使用逗号分隔</param>
        </member>
        <member name="M:Spring.Helpers.String.PinYin(System.String)">
            <summary>
            获取汉字的拼音简码，即首字母缩写,范例：中国,返回zg
            </summary>
            <param name="chineseText">汉字文本,范例： 中国</param>
        </member>
        <member name="M:Spring.Helpers.String.ResolvePinYin(System.Char)">
            <summary>
            解析单个汉字的拼音简码
            </summary>
        </member>
        <member name="M:Spring.Helpers.String.ResolveByCode(System.UInt16)">
            <summary>
            使用字符编码方式获取拼音简码
            </summary>
        </member>
        <member name="M:Spring.Helpers.String.ResolveByConst(System.String)">
            <summary>
            通过拼音简码常量获取
            </summary>
        </member>
        <member name="T:Spring.Helpers.Thread">
            <summary>
            线程操作
            </summary>
        </member>
        <member name="M:Spring.Helpers.Thread.WaitAll(System.Action[])">
            <summary>
            执行多个操作，多个操作将同时执行
            </summary>
            <param name="actions">操作集合</param>
        </member>
        <member name="T:Spring.Helpers.Time">
            <summary>
            时间操作
            </summary>
        </member>
        <member name="F:Spring.Helpers.Time._dateTime">
            <summary>
            日期
            </summary>
        </member>
        <member name="M:Spring.Helpers.Time.SetTime(System.Nullable{System.DateTime})">
            <summary>
            设置时间
            </summary>
            <param name="dateTime">时间</param>
        </member>
        <member name="M:Spring.Helpers.Time.SetTime(System.String)">
            <summary>
            设置时间
            </summary>
            <param name="dateTime">时间</param>
        </member>
        <member name="M:Spring.Helpers.Time.Reset">
            <summary>
            重置时间
            </summary>
        </member>
        <member name="M:Spring.Helpers.Time.GetDateTime">
            <summary>
            获取当前日期时间
            </summary>
        </member>
        <member name="M:Spring.Helpers.Time.GetDate">
            <summary>
            获取当前日期,不带时间
            </summary>
        </member>
        <member name="M:Spring.Helpers.Time.GetUnixTimestamp">
            <summary>
            获取Unix时间戳
            </summary>
        </member>
        <member name="M:Spring.Helpers.Time.GetUnixTimestamp(System.DateTime)">
            <summary>
            获取Unix时间戳
            </summary>
            <param name="time">时间</param>
        </member>
        <member name="M:Spring.Helpers.Time.GetTimeFromUnixTimestamp(System.Int64)">
            <summary>
            从Unix时间戳获取时间
            </summary>
            <param name="timestamp">Unix时间戳</param>
        </member>
        <member name="T:Spring.Helpers.Web">
            <summary>
            Web操作
            </summary>
        </member>
        <member name="M:Spring.Helpers.Web.#cctor">
            <summary>
            初始化Web操作
            </summary>
        </member>
        <member name="P:Spring.Helpers.Web.HttpContextAccessor">
            <summary>
            Http上下文访问器
            </summary>
        </member>
        <member name="P:Spring.Helpers.Web.HttpContext">
            <summary>
            当前Http上下文
            </summary>
        </member>
        <member name="M:Spring.Helpers.Web.Client">
            <summary>
            Web客户端，用于发送Http请求
            </summary>
        </member>
        <member name="M:Spring.Helpers.Web.Client``1">
            <summary>
            Web客户端，用于发送Http请求
            </summary>
            <typeparam name="TResult">返回结果类型</typeparam>
        </member>
        <member name="P:Spring.Helpers.Web.Url">
            <summary>
            请求地址
            </summary>
        </member>
        <member name="P:Spring.Helpers.Web.Ip">
            <summary>
            客户端Ip地址
            </summary>
        </member>
        <member name="M:Spring.Helpers.Web.GetLanIp">
            <summary>
            获取局域网IP
            </summary>
        </member>
        <member name="P:Spring.Helpers.Web.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="M:Spring.Helpers.Web.GetClientHostName">
            <summary>
            获取Web客户端主机名
            </summary>
        </member>
        <member name="M:Spring.Helpers.Web.GetRemoteAddress">
            <summary>
            获取远程地址
            </summary>
        </member>
        <member name="P:Spring.Helpers.Web.Browser">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="T:Spring.INullObject">
            <summary>
            空对象
            </summary>
        </member>
        <member name="M:Spring.INullObject.IsNull">
            <summary>
            是否空对象
            </summary>
        </member>
        <member name="T:Spring.Item">
            <summary>
            列表项
            </summary>
        </member>
        <member name="M:Spring.Item.#ctor">
            <summary>
            初始化列表项
            </summary>
        </member>
        <member name="M:Spring.Item.#ctor(System.String,System.String)">
            <summary>
            初始化列表项
            </summary>
            <param name="text">文本</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Item.#ctor(System.String,System.String,System.Int32)">
            <summary>
            初始化
            </summary>
            <param name="text">文本</param>
            <param name="value">值</param>
            <param name="sortId">排序号</param>
        </member>
        <member name="P:Spring.Item.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:Spring.Item.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Spring.Item.SortId">
            <summary>
            排序号
            </summary>
        </member>
        <member name="M:Spring.Item.CompareTo(Spring.Item)">
            <summary>
            比较
            </summary>
            <param name="other">其它列表项</param>
        </member>
        <member name="T:Spring.Logs.Abstractions.ILogContent">
            <summary>
            日志内容
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.LogName">
            <summary>
            日志名称
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.Level">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.TraceId">
            <summary>
            跟踪号
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.OperationTime">
            <summary>
            操作时间
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.Duration">
            <summary>
            持续时间
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.Ip">
            <summary>
            IP
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.ThreadId">
            <summary>
            线程号
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.Browser">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.Url">
            <summary>
            请求地址
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.UserId">
            <summary>
            操作人编号
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContent.Exception">
            <summary>
            异常消息
            </summary>
        </member>
        <member name="T:Spring.Logs.Abstractions.ILogContext">
            <summary>
            日志上下文
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContext.TraceId">
            <summary>
            跟踪号
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContext.Stopwatch">
            <summary>
            计时器
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContext.Ip">
            <summary>
            IP
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContext.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContext.Browser">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogContext.Url">
            <summary>
            请求地址
            </summary>
        </member>
        <member name="T:Spring.Logs.Abstractions.ILogFormat">
            <summary>
            日志格式器
            </summary>
        </member>
        <member name="M:Spring.Logs.Abstractions.ILogFormat.Format(Spring.Logs.Abstractions.ILogContent)">
            <summary>
            格式化
            </summary>
            <param name="content">日志内容</param>
        </member>
        <member name="T:Spring.Logs.Abstractions.ILogProvider">
            <summary>
            日志提供程序
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogProvider.LogName">
            <summary>
            日志名称
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogProvider.IsDebugEnabled">
            <summary>
            调试级别是否启用
            </summary>
        </member>
        <member name="P:Spring.Logs.Abstractions.ILogProvider.IsTraceEnabled">
            <summary>
            跟踪级别是否启用
            </summary>
        </member>
        <member name="M:Spring.Logs.Abstractions.ILogProvider.WriteLog(Microsoft.Extensions.Logging.LogLevel,Spring.Logs.Abstractions.ILogContent)">
            <summary>
            写日志
            </summary>
            <param name="level">日志等级</param>
            <param name="content">日志内容</param>
        </member>
        <member name="T:Spring.Logs.Abstractions.ILogProviderFactory">
            <summary>
            日志提供程序工厂
            </summary>
        </member>
        <member name="M:Spring.Logs.Abstractions.ILogProviderFactory.Create(System.String,Spring.Logs.Abstractions.ILogFormat)">
            <summary>
            创建日志提供程序
            </summary>
            <param name="logName">日志名称</param>
            <param name="format">日志格式化器</param>
        </member>
        <member name="T:Spring.Logs.Core.LogBase`1">
            <summary>
            日志操作
            </summary>
            <typeparam name="TContent">日志内容类型</typeparam>
        </member>
        <member name="F:Spring.Logs.Core.LogBase`1._content">
            <summary>
            日志内容
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.LogBase`1.LogContent">
            <summary>
            日志内容
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.#ctor(Spring.Logs.Abstractions.ILogProvider,Spring.Logs.Abstractions.ILogContext,Spring.Domains.Sessions.ISession)">
            <summary>
            初始化日志操作
            </summary>
            <param name="provider">日志提供程序</param>
            <param name="context">日志上下文</param>
            <param name="session">用户会话</param>
        </member>
        <member name="P:Spring.Logs.Core.LogBase`1.Provider">
            <summary>
            日志提供程序
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.LogBase`1.Context">
            <summary>
            日志上下文
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.LogBase`1.Session">
            <summary>
            用户会话
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.GetContent">
            <summary>
            获取日志内容
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Set``1(System.Action{``0})">
            <summary>
            设置内容
            </summary>
            <param name="action">设置内容操作</param>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Init(`0)">
            <summary>
            初始化
            </summary>
            <param name="content">日志内容</param>
        </member>
        <member name="P:Spring.Logs.Core.LogBase`1.IsDebugEnabled">
            <summary>
            调试级别是否启用
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.LogBase`1.IsTraceEnabled">
            <summary>
            跟踪级别是否启用
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Trace">
            <summary>
            跟踪
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Execute(Microsoft.Extensions.Logging.LogLevel,`0@)">
            <summary>
            执行
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Enabled(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Trace(System.String,System.Object[])">
            <summary>
            跟踪
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Debug">
            <summary>
            调试
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Debug(System.String,System.Object[])">
            <summary>
            调试
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Info(System.String,System.Object[])">
            <summary>
            信息
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Warn">
            <summary>
            警告
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Warn(System.String,System.Object[])">
            <summary>
            警告
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Error(System.String,System.Object[])">
            <summary>
            错误
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Fatal">
            <summary>
            致命错误
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogBase`1.Fatal(System.String,System.Object[])">
            <summary>
            致命错误
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="T:Spring.Logs.Core.LogContext">
            <summary>
            日志上下文
            </summary>
        </member>
        <member name="F:Spring.Logs.Core.LogContext._info">
            <summary>
            日志上下文信息
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogContext.#ctor(Spring.Contexts.IContext)">
            <summary>
            初始化日志上下文
            </summary>
            <param name="context">上下文</param>
        </member>
        <member name="P:Spring.Logs.Core.LogContext.Context">
            <summary>
            上下文
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogContext.GetInfo">
            <summary>
            获取日志上下文信息
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogContext.CreateInfo">
            <summary>
            创建日志上下文信息
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogContext.GetTraceId">
            <summary>
            获取跟踪号
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.LogContext.GetStopwatch">
            <summary>
            获取计时器
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.LogContext.TraceId">
            <summary>
            跟踪号
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.LogContext.Stopwatch">
            <summary>
            计时器
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.LogContext.Ip">
            <summary>
            IP
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.LogContext.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.LogContext.Browser">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.LogContext.Url">
            <summary>
            请求地址
            </summary>
        </member>
        <member name="T:Spring.Logs.Core.NullLog">
            <summary>
            空日志操作
            </summary>
        </member>
        <member name="F:Spring.Logs.Core.NullLog.Instance">
            <summary>
            空日志操作实例
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Set``1(System.Action{``0})">
            <summary>
            设置内容
            </summary>
            <typeparam name="TContent">日志内容类型</typeparam>
            <param name="action">设置内容操作</param>
        </member>
        <member name="P:Spring.Logs.Core.NullLog.IsDebugEnabled">
            <summary>
            调试级别是否启用
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.NullLog.IsTraceEnabled">
            <summary>
            跟踪级别是否启用
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Trace">
            <summary>
            跟踪
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Trace(System.String,System.Object[])">
            <summary>
            跟踪
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Debug">
            <summary>
            调试
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Debug(System.String,System.Object[])">
            <summary>
            调试
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Info(System.String,System.Object[])">
            <summary>
            信息
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Warn">
            <summary>
            警告
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Warn(System.String,System.Object[])">
            <summary>
            警告
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Error(System.String,System.Object[])">
            <summary>
            错误
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Fatal">
            <summary>
            致命错误
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.NullLog.Fatal(System.String,System.Object[])">
            <summary>
            致命错误
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="T:Spring.Logs.Core.NullLogContext">
            <summary>
            空日志上下文
            </summary>
        </member>
        <member name="F:Spring.Logs.Core.NullLogContext.Instance">
            <summary>
            空日志上下文实例
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.NullLogContext.TraceId">
            <summary>
            跟踪号
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.NullLogContext.Stopwatch">
            <summary>
            计时器
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.NullLogContext.Ip">
            <summary>
            IP
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.NullLogContext.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.NullLogContext.Browser">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="P:Spring.Logs.Core.NullLogContext.Url">
            <summary>
            请求地址
            </summary>
        </member>
        <member name="T:Spring.Logs.Core.NullLogFormat">
            <summary>
            空日志格式器
            </summary>
        </member>
        <member name="F:Spring.Logs.Core.NullLogFormat.Instance">
            <summary>
            空日志格式器实例
            </summary>
        </member>
        <member name="M:Spring.Logs.Core.NullLogFormat.Format(Spring.Logs.Abstractions.ILogContent)">
            <summary>
            格式化
            </summary>
            <param name="content">日志内容</param>
        </member>
        <member name="T:Spring.Logs.Extensions.Extensions">
            <summary>
            日志扩展
            </summary>
            <summary>
            日志扩展
            </summary>
        </member>
        <member name="M:Spring.Logs.Extensions.Extensions.Content(Spring.Logs.ILog)">
            <summary>
            设置内容
            </summary>
            <param name="log">日志操作</param>
        </member>
        <member name="M:Spring.Logs.Extensions.Extensions.Content(Spring.Logs.ILog,System.String,System.Object[])">
            <summary>
            设置内容
            </summary>
            <param name="log">日志操作</param>
            <param name="value">值</param>
            <param name="args">变量值</param>
        </member>
        <member name="M:Spring.Logs.Extensions.Extensions.Content(Spring.Logs.ILog,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            设置内容
            </summary>
            <param name="log">日志操作</param>
            <param name="dictionary">字典</param>
        </member>
        <member name="M:Spring.Logs.Extensions.Extensions.Append(Spring.Logs.Abstractions.ILogContent,System.Text.StringBuilder,System.String,System.Object[])">
            <summary>
            追加内容
            </summary>
        </member>
        <member name="M:Spring.Logs.Extensions.Extensions.AppendLine(Spring.Logs.Abstractions.ILogContent,System.Text.StringBuilder,System.String,System.Object[])">
            <summary>
            追加内容并换行
            </summary>
        </member>
        <member name="M:Spring.Logs.Extensions.Extensions.Content(Spring.Logs.Abstractions.ILogContent,System.String,System.Object[])">
            <summary>
            设置内容并换行
            </summary>
            <param name="content">日志内容</param>
            <param name="value">值</param>
            <param name="args">变量值</param>
        </member>
        <member name="T:Spring.Logs.ILog">
            <summary>
            日志操作
            </summary>
        </member>
        <member name="M:Spring.Logs.ILog.Set``1(System.Action{``0})">
            <summary>
            设置内容
            </summary>
            <typeparam name="TContent">日志内容类型</typeparam>
            <param name="action">设置内容操作</param>
        </member>
        <member name="P:Spring.Logs.ILog.IsDebugEnabled">
            <summary>
            调试级别是否启用
            </summary>
        </member>
        <member name="P:Spring.Logs.ILog.IsTraceEnabled">
            <summary>
            跟踪级别是否启用
            </summary>
        </member>
        <member name="M:Spring.Logs.ILog.Trace">
            <summary>
            跟踪
            </summary>
        </member>
        <member name="M:Spring.Logs.ILog.Trace(System.String,System.Object[])">
            <summary>
            跟踪
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.ILog.Debug">
            <summary>
            调试
            </summary>
        </member>
        <member name="M:Spring.Logs.ILog.Debug(System.String,System.Object[])">
            <summary>
            调试
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.ILog.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="M:Spring.Logs.ILog.Info(System.String,System.Object[])">
            <summary>
            信息
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.ILog.Warn">
            <summary>
            警告
            </summary>
        </member>
        <member name="M:Spring.Logs.ILog.Warn(System.String,System.Object[])">
            <summary>
            警告
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.ILog.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="M:Spring.Logs.ILog.Error(System.String,System.Object[])">
            <summary>
            错误
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="M:Spring.Logs.ILog.Fatal">
            <summary>
            致命错误
            </summary>
        </member>
        <member name="M:Spring.Logs.ILog.Fatal(System.String,System.Object[])">
            <summary>
            致命错误
            </summary>
            <param name="message">日志消息</param>
            <param name="args">参数值</param>
        </member>
        <member name="T:Spring.Logs.Internal.LogContextInfo">
            <summary>
            日志上下文信息
            </summary>
        </member>
        <member name="P:Spring.Logs.Internal.LogContextInfo.TraceId">
            <summary>
            跟踪号
            </summary>
        </member>
        <member name="P:Spring.Logs.Internal.LogContextInfo.Stopwatch">
            <summary>
            计时器
            </summary>
        </member>
        <member name="P:Spring.Logs.Internal.LogContextInfo.Ip">
            <summary>
            IP
            </summary>
        </member>
        <member name="P:Spring.Logs.Internal.LogContextInfo.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:Spring.Logs.Internal.LogContextInfo.Browser">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="P:Spring.Logs.Internal.LogContextInfo.Url">
            <summary>
            请求地址
            </summary>
        </member>
        <member name="T:Spring.Maps.Extensions">
            <summary>
            对象映射
            </summary>
        </member>
        <member name="F:Spring.Maps.Extensions.Sync">
            <summary>
            同步锁
            </summary>
        </member>
        <member name="M:Spring.Maps.Extensions.MapTo``2(``0,``1)">
            <summary>
            将源对象映射到目标对象
            </summary>
            <typeparam name="TSource">源类型</typeparam>
            <typeparam name="TDestination">目标类型</typeparam>
            <param name="source">源对象</param>
            <param name="destination">目标对象</param>
        </member>
        <member name="M:Spring.Maps.Extensions.MapTo``1(System.Object)">
            <summary>
            将源对象映射到目标对象
            </summary>
            <typeparam name="TDestination">目标类型</typeparam>
            <param name="source">源对象</param>
        </member>
        <member name="M:Spring.Maps.Extensions.MapTo``1(System.Object,``0)">
            <summary>
            将源对象映射到目标对象
            </summary>
        </member>
        <member name="M:Spring.Maps.Extensions.GetMap(System.Type,System.Type)">
            <summary>
            获取映射配置
            </summary>
        </member>
        <member name="M:Spring.Maps.Extensions.GetType(System.Object)">
            <summary>
            获取类型
            </summary>
        </member>
        <member name="M:Spring.Maps.Extensions.MapToList``1(System.Collections.IEnumerable)">
            <summary>
            将源集合映射到目标集合
            </summary>
            <typeparam name="TDestination">目标元素类型,范例：Sample,不要加List</typeparam>
            <param name="source">源集合</param>
        </member>
        <member name="T:Spring.NullObject">
            <summary>
            空对象
            </summary>
        </member>
        <member name="M:Spring.NullObject.IsNull">
            <summary>
            是否空对象
            </summary>
        </member>
        <member name="T:Spring.Offices.Cell">
            <summary>
            单元格
            </summary>
        </member>
        <member name="M:Spring.Offices.Cell.#ctor(System.Object,System.Int32,System.Int32)">
            <summary>
            初始化单元格
            </summary>
            <param name="value">值</param>
            <param name="columnSpan">列跨度</param>
            <param name="rowSpan">行跨度</param>
        </member>
        <member name="P:Spring.Offices.Cell.Row">
            <summary>
            行
            </summary>
        </member>
        <member name="P:Spring.Offices.Cell.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Spring.Offices.Cell.ColumnSpan">
            <summary>
            列跨度
            </summary>
        </member>
        <member name="P:Spring.Offices.Cell.RowSpan">
            <summary>
            行跨度
            </summary>
        </member>
        <member name="P:Spring.Offices.Cell.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="P:Spring.Offices.Cell.ColumnIndex">
            <summary>
            列索引
            </summary>
        </member>
        <member name="P:Spring.Offices.Cell.EndRowIndex">
            <summary>
            结束行索引
            </summary>
        </member>
        <member name="P:Spring.Offices.Cell.EndColumnIndex">
            <summary>
            结束列索引
            </summary>
        </member>
        <member name="P:Spring.Offices.Cell.NeedMerge">
            <summary>
            是否需要合并单元格
            </summary>
        </member>
        <member name="P:Spring.Offices.Cell.Null">
            <summary>
            创建空单元格
            </summary>
        </member>
        <member name="T:Spring.Offices.CellStyle">
            <summary>
            单元格样式
            </summary>
        </member>
        <member name="M:Spring.Offices.CellStyle.#ctor">
            <summary>
            初始化单元格样式
            </summary>
        </member>
        <member name="P:Spring.Offices.CellStyle.Alignment">
            <summary>
            水平对齐
            </summary>
        </member>
        <member name="P:Spring.Offices.CellStyle.VerticalAlignment">
            <summary>
            垂直对齐
            </summary>
        </member>
        <member name="P:Spring.Offices.CellStyle.BackgroundColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:Spring.Offices.CellStyle.FillPattern">
            <summary>
            填充模式
            </summary>
        </member>
        <member name="P:Spring.Offices.CellStyle.BorderColor">
            <summary>
            边框色
            </summary>
        </member>
        <member name="P:Spring.Offices.CellStyle.FontSize">
            <summary>
            字号
            </summary>
        </member>
        <member name="P:Spring.Offices.CellStyle.FontColor">
            <summary>
            字体颜色
            </summary>
        </member>
        <member name="P:Spring.Offices.CellStyle.FontBoldWeight">
            <summary>
            字体加粗
            </summary>
        </member>
        <member name="P:Spring.Offices.CellStyle.IsWrap">
            <summary>
            内容是否自动换行
            </summary>
        </member>
        <member name="M:Spring.Offices.CellStyle.Head">
            <summary>
            创建表头样式
            </summary>
        </member>
        <member name="M:Spring.Offices.CellStyle.Body">
            <summary>
            创建正文样式
            </summary>
        </member>
        <member name="M:Spring.Offices.CellStyle.Foot">
            <summary>
            创建页脚样式
            </summary>
        </member>
        <member name="T:Spring.Offices.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="T:Spring.Offices.FillPattern">
            <summary>
            填充模式
            </summary>
        </member>
        <member name="T:Spring.Offices.HorizontalAlignment">
            <summary>
            水平对齐
            </summary>
        </member>
        <member name="F:Spring.Offices.HorizontalAlignment.Left">
            <summary>
            左对齐
            </summary>
        </member>
        <member name="F:Spring.Offices.HorizontalAlignment.Right">
            <summary>
            右对齐
            </summary>
        </member>
        <member name="F:Spring.Offices.HorizontalAlignment.Center">
            <summary>
            居中对齐
            </summary>
        </member>
        <member name="T:Spring.Offices.IExcel">
            <summary>
            Excel操作
            </summary>
        </member>
        <member name="M:Spring.Offices.IExcel.CreateWorkbook">
            <summary>
            创建工作薄
            </summary>
        </member>
        <member name="M:Spring.Offices.IExcel.CreateSheet(System.String)">
            <summary>
            创建工作表
            </summary>
            <param name="sheetName">工作表名称</param>
        </member>
        <member name="M:Spring.Offices.IExcel.CreateRow(System.Int32)">
            <summary>
            创建行
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:Spring.Offices.IExcel.CreateCell(Spring.Offices.Cell)">
            <summary>
            创建单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:Spring.Offices.IExcel.Write(System.IO.Stream)">
            <summary>
            写入流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:Spring.Offices.IExcel.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:Spring.Offices.IExcel.MergeCell(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            合并单元格
            </summary>
            <param name="startRowIndex">起始行索引</param>
            <param name="endRowIndex">结束行索引</param>
            <param name="startColumnIndex">起始列索引</param>
            <param name="endColumnIndex">结束列索引</param>
        </member>
        <member name="M:Spring.Offices.IExcel.MergeCell(Spring.Offices.Cell)">
            <summary>
            合并单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:Spring.Offices.IExcel.HeadStyle(Spring.Offices.Table,Spring.Offices.CellStyle)">
            <summary>
            设置表头样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:Spring.Offices.IExcel.BodyStyle(Spring.Offices.Table,Spring.Offices.CellStyle)">
            <summary>
            设置正文样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:Spring.Offices.IExcel.FootStyle(Spring.Offices.Table,Spring.Offices.CellStyle)">
            <summary>
            设置页脚样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:Spring.Offices.IExcel.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">列宽度，设置字符数</param>
        </member>
        <member name="T:Spring.Offices.IndexManager">
            <summary>
            索引管理器
            </summary>
        </member>
        <member name="M:Spring.Offices.IndexManager.#ctor">
            <summary>
            初始化索引管理器
            </summary>
        </member>
        <member name="F:Spring.Offices.IndexManager._list">
            <summary>
            索引列表
            </summary>
        </member>
        <member name="M:Spring.Offices.IndexManager.GetIndex(System.Int32)">
            <summary>
            获取索引
            </summary>
            <param name="span">跨度</param>
        </member>
        <member name="M:Spring.Offices.IndexManager.AddIndex(System.Int32,System.Int32)">
            <summary>
            添加索引
            </summary>
            <param name="index">索引</param>
            <param name="span">跨度</param>
        </member>
        <member name="M:Spring.Offices.IndexManager.AddIndex(Spring.Offices.IndexRange,System.Int32,System.Int32)">
            <summary>
            添加索引
            </summary>
        </member>
        <member name="T:Spring.Offices.IndexRange">
            <summary>
            索引范围
            </summary>
        </member>
        <member name="M:Spring.Offices.IndexRange.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化索引范围
            </summary>
            <param name="index">当前索引</param>
            <param name="endIndex">结束索引</param>
        </member>
        <member name="P:Spring.Offices.IndexRange.Index">
            <summary>
            当前索引
            </summary>
        </member>
        <member name="P:Spring.Offices.IndexRange.EndIndex">
            <summary>
            结束索引
            </summary>
        </member>
        <member name="M:Spring.Offices.IndexRange.GetIndex(System.Int32)">
            <summary>
            获取索引
            </summary>
            <param name="span">跨度</param>
        </member>
        <member name="M:Spring.Offices.IndexRange.Contains(System.Int32)">
            <summary>
            判断是否包含该索引
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:Spring.Offices.IndexRange.Split(System.Int32,System.Int32)">
            <summary>
            分割索引范围
            </summary>
            <param name="index">索引</param>
            <param name="span">跨度</param>
        </member>
        <member name="P:Spring.Offices.IndexRange.IsEnd">
            <summary>
            是否已结束
            </summary>
        </member>
        <member name="T:Spring.Offices.NullCell">
            <summary>
            空单元格
            </summary>
        </member>
        <member name="M:Spring.Offices.NullCell.#ctor">
            <summary>
            初始化空单元格
            </summary>
        </member>
        <member name="M:Spring.Offices.NullCell.IsNull">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="T:Spring.Offices.Range">
            <summary>
            区
            </summary>
        </member>
        <member name="M:Spring.Offices.Range.#ctor(System.Int32)">
            <summary>
            初始化区
            </summary>
            <param name="startIndex">起始索引</param>
        </member>
        <member name="F:Spring.Offices.Range._rows">
            <summary>
            行集
            </summary>
        </member>
        <member name="F:Spring.Offices.Range._startIndex">
            <summary>
            起始索引
            </summary>
        </member>
        <member name="P:Spring.Offices.Range.Item(System.Int32)">
            <summary>
            获取行
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:Spring.Offices.Range.GetRow(System.Int32)">
            <summary>
            获取行
            </summary>
            <param name="index">外部索引</param>
        </member>
        <member name="P:Spring.Offices.Range.ColumnNumber">
            <summary>
            列数
            </summary>
        </member>
        <member name="P:Spring.Offices.Range.Count">
            <summary>
            行数
            </summary>
        </member>
        <member name="M:Spring.Offices.Range.GetRows">
            <summary>
            获取行
            </summary>
        </member>
        <member name="M:Spring.Offices.Range.AddRow(System.Int32,System.Collections.Generic.IEnumerable{Spring.Offices.Cell})">
            <summary>
            添加行
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:Spring.Offices.Range.CreateRow(System.Int32)">
            <summary>
            创建行
            </summary>
        </member>
        <member name="M:Spring.Offices.Range.AddCell(Spring.Offices.Row,Spring.Offices.Cell,System.Int32)">
            <summary>
            添加单元格
            </summary>
        </member>
        <member name="M:Spring.Offices.Range.AddPlaceholderCell(Spring.Offices.Cell,System.Int32)">
            <summary>
            为下方受rowspan影响的行添加占位单元格
            </summary>
        </member>
        <member name="M:Spring.Offices.Range.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="T:Spring.Offices.Row">
            <summary>
            行
            </summary>
        </member>
        <member name="M:Spring.Offices.Row.#ctor(System.Int32)">
            <summary>
            初始化行
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="F:Spring.Offices.Row._indexManager">
            <summary>
            索引管理器
            </summary>
        </member>
        <member name="P:Spring.Offices.Row.Cells">
            <summary>
            单元格列表
            </summary>
        </member>
        <member name="P:Spring.Offices.Row.Item(System.Int32)">
            <summary>
            获取单元格
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="P:Spring.Offices.Row.ColumnNumber">
            <summary>
            列数
            </summary>
        </member>
        <member name="P:Spring.Offices.Row.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="M:Spring.Offices.Row.Add(System.Object,System.Int32,System.Int32)">
            <summary>
            添加单元格
            </summary>
            <param name="value">值</param>
            <param name="columnSpan">列跨度</param>
            <param name="rowSpan">行跨度</param>
        </member>
        <member name="M:Spring.Offices.Row.Add(Spring.Offices.Cell)">
            <summary>
            添加单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:Spring.Offices.Row.SetColumnIndex(Spring.Offices.Cell)">
            <summary>
            设置列索引
            </summary>
        </member>
        <member name="T:Spring.Offices.Table">
            <summary>
            表格
            </summary>
        </member>
        <member name="M:Spring.Offices.Table.#ctor">
            <summary>
            初始化表格
            </summary>
        </member>
        <member name="F:Spring.Offices.Table._header">
            <summary>
            头部
            </summary>
        </member>
        <member name="F:Spring.Offices.Table._body">
            <summary>
            正文
            </summary>
        </member>
        <member name="F:Spring.Offices.Table._footer">
            <summary>
            底部
            </summary>
        </member>
        <member name="F:Spring.Offices.Table._rowIndex">
            <summary>
            当前行索引
            </summary>
        </member>
        <member name="P:Spring.Offices.Table.Title">
            <summary>
            总标题
            </summary>
        </member>
        <member name="P:Spring.Offices.Table.ColumnNumber">
            <summary>
            列数
            </summary>
        </member>
        <member name="P:Spring.Offices.Table.HeadRowCount">
            <summary>
            表头行数
            </summary>
        </member>
        <member name="P:Spring.Offices.Table.BodyRowCount">
            <summary>
            正文行数
            </summary>
        </member>
        <member name="P:Spring.Offices.Table.FootRowCount">
            <summary>
            页脚行数
            </summary>
        </member>
        <member name="P:Spring.Offices.Table.Count">
            <summary>
            总行数
            </summary>
        </member>
        <member name="M:Spring.Offices.Table.GetHeader">
            <summary>
            获取表头
            </summary>
        </member>
        <member name="M:Spring.Offices.Table.GetBody">
            <summary>
            获取表格正文
            </summary>
        </member>
        <member name="M:Spring.Offices.Table.GetFooter">
            <summary>
            获取页脚
            </summary>
        </member>
        <member name="M:Spring.Offices.Table.AddHeadRow(System.String[])">
            <summary>
            添加表头
            </summary>
            <param name="titles">标题</param>
        </member>
        <member name="M:Spring.Offices.Table.AddHeadRow(Spring.Offices.Cell[])">
            <summary>
            添加表头
            </summary>
            <param name="cells">表头</param>
        </member>
        <member name="M:Spring.Offices.Table.AddRowToHeader(System.Collections.Generic.IEnumerable{Spring.Offices.Cell})">
            <summary>
            添加表头行
            </summary>
        </member>
        <member name="M:Spring.Offices.Table.ResetFirstColumnSpan">
            <summary>
            重置第一行的列跨度，第一行可能为总标题
            </summary>
        </member>
        <member name="M:Spring.Offices.Table.AddBodyRow(System.Object[])">
            <summary>
            添加正文
            </summary>
            <param name="cellValues">值</param>
        </member>
        <member name="M:Spring.Offices.Table.AddBodyRow(System.Collections.Generic.IEnumerable{Spring.Offices.Cell})">
            <summary>
            添加正文
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:Spring.Offices.Table.GetBodyRange">
            <summary>
            获取正文区域
            </summary>
        </member>
        <member name="M:Spring.Offices.Table.AddFootRow(System.String[])">
            <summary>
            添加页脚
            </summary>
            <param name="cellValues">值</param>
        </member>
        <member name="M:Spring.Offices.Table.AddFootRow(Spring.Offices.Cell[])">
            <summary>
            添加页脚
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:Spring.Offices.Table.GetFootRange">
            <summary>
            获取页脚区域
            </summary>
        </member>
        <member name="M:Spring.Offices.Table.ClearHeader">
            <summary>
            清空表头
            </summary>
        </member>
        <member name="T:Spring.Offices.VerticalAlignment">
            <summary>
            垂直对齐
            </summary>
        </member>
        <member name="F:Spring.Offices.VerticalAlignment.Top">
            <summary>
            顶部对齐
            </summary>
        </member>
        <member name="F:Spring.Offices.VerticalAlignment.Bottom">
            <summary>
            底部对齐
            </summary>
        </member>
        <member name="F:Spring.Offices.VerticalAlignment.Center">
            <summary>
            居中对齐
            </summary>
        </member>
        <member name="T:Spring.Parameters.Formats.IParameterFormat">
            <summary>
            参数格式化器
            </summary>
        </member>
        <member name="M:Spring.Parameters.Formats.IParameterFormat.Format(System.String,System.String)">
            <summary>
            格式化
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Parameters.Formats.IParameterFormat.Join(System.String,System.String)">
            <summary>
            连接参数
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="T:Spring.Parameters.Formats.ParameterFormatBase">
            <summary>
            参数格式化器
            </summary>
        </member>
        <member name="M:Spring.Parameters.Formats.ParameterFormatBase.Format(System.String,System.String)">
            <summary>
            格式化
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="P:Spring.Parameters.Formats.ParameterFormatBase.FormatSeparator">
            <summary>
            格式化分割符
            </summary>
        </member>
        <member name="M:Spring.Parameters.Formats.ParameterFormatBase.Join(System.String,System.String)">
            <summary>
            连接参数
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="P:Spring.Parameters.Formats.ParameterFormatBase.JoinSeparator">
            <summary>
            连接符
            </summary>
        </member>
        <member name="T:Spring.Parameters.Formats.UrlParameterFormat">
            <summary>
            Url参数格式化器
            </summary>
        </member>
        <member name="F:Spring.Parameters.Formats.UrlParameterFormat.Instance">
            <summary>
            Url参数格式化器实例
            </summary>
        </member>
        <member name="P:Spring.Parameters.Formats.UrlParameterFormat.FormatSeparator">
            <summary>
            格式化分割符
            </summary>
        </member>
        <member name="P:Spring.Parameters.Formats.UrlParameterFormat.JoinSeparator">
            <summary>
            连接符
            </summary>
        </member>
        <member name="T:Spring.Parameters.ParameterBuilder">
            <summary>
            参数生成器
            </summary>
        </member>
        <member name="F:Spring.Parameters.ParameterBuilder._params">
            <summary>
            参数集合
            </summary>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.#ctor">
            <summary>
            初始化参数生成器
            </summary>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.#ctor(Spring.Parameters.ParameterBuilder)">
            <summary>
            初始化参数生成器
            </summary>
            <param name="builder">参数生成器</param>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            初始化参数生成器
            </summary>
            <param name="dictionary">字典</param>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.Add(System.String,System.Object)">
            <summary>
            添加参数，如果参数已存在则替换
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.GetValue(System.Object)">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.GetDictionary">
            <summary>
            获取字典
            </summary>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.GetKeyValuePairs">
            <summary>
            获取键值对集合
            </summary>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.Remove(System.String)">
            <summary>
            移除参数
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.ToJson">
            <summary>
            转换为Json
            </summary>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.Result(Spring.Parameters.Formats.IParameterFormat,System.Boolean)">
            <summary>
            获取结果
            </summary>
            <param name="format">参数格式化器</param>
            <param name="isSort">是否按参数名排序</param>
        </member>
        <member name="M:Spring.Parameters.ParameterBuilder.GetDictionary(System.Boolean)">
            <summary>
            获取字典
            </summary>
        </member>
        <member name="T:Spring.Parameters.UrlParameterBuilder">
            <summary>
            Url参数生成器
            </summary>
        </member>
        <member name="P:Spring.Parameters.UrlParameterBuilder.ParameterBuilder">
            <summary>
            参数生成器
            </summary>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.#ctor">
            <summary>
            初始化Url参数生成器
            </summary>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.#ctor(Spring.Parameters.UrlParameterBuilder)">
            <summary>
            初始化Url参数生成器
            </summary>
            <param name="builder">Url参数生成器</param>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.#ctor(System.String,Spring.Parameters.UrlParameterBuilder)">
            <summary>
            初始化Url参数生成器
            </summary>
            <param name="url">Url</param>
            <param name="builder">Url参数生成器</param>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.LoadUrl(System.String)">
            <summary>
            加载Url
            </summary>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.Add(System.String,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.GetDictionary">
            <summary>
            获取字典
            </summary>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.GetKeyValuePairs">
            <summary>
            获取键值对集合
            </summary>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.Result(System.Boolean)">
            <summary>
            获取结果，格式：参数名=参数值&amp;参数名=参数值
            </summary>
            <param name="isSort">是否按参数名排序</param>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.JoinUrl(System.String)">
            <summary>
            连接Url
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.GetUrl(System.String)">
            <summary>
            获取Url
            </summary>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:Spring.Parameters.UrlParameterBuilder.Remove(System.String)">
            <summary>
            移除参数
            </summary>
            <param name="key">键</param>
        </member>
        <member name="T:Spring.Properties.LibraryResource">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Spring.Properties.LibraryResource.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Spring.Properties.LibraryResource.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Spring.Properties.LibraryResource.ConcurrencyExceptionMessage">
            <summary>
              查找类似 当前操作的数据已被其他人修改，请刷新后重试 的本地化字符串。
            </summary>
        </member>
        <member name="P:Spring.Properties.LibraryResource.OnlyOnePredicate">
            <summary>
              查找类似 仅允许添加一个条件,条件：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="T:Spring.Properties.R">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Spring.Properties.R.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Spring.Properties.R.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Spring.Properties.R.ConcurrencyExceptionMessage">
            <summary>
              查找类似 当前操作的数据已被其它人修改，请刷新后重试 的本地化字符串。
            </summary>
        </member>
        <member name="P:Spring.Properties.R.SystemError">
            <summary>
              查找类似 系统忙，请稍后再试 的本地化字符串。
            </summary>
        </member>
        <member name="T:Spring.Randoms.GuidRandomGenerator">
            <summary>
            Guid随机数生成器，每次创建一个新的Guid字符串，去掉了Guid的分隔符
            </summary>
        </member>
        <member name="M:Spring.Randoms.GuidRandomGenerator.Generate">
            <summary>
            生成随机数
            </summary>
        </member>
        <member name="F:Spring.Randoms.GuidRandomGenerator.Instance">
            <summary>
            Guid随机数生成器实例
            </summary>
        </member>
        <member name="T:Spring.Randoms.IRandomGenerator">
            <summary>
            随机数生成器
            </summary>
        </member>
        <member name="M:Spring.Randoms.IRandomGenerator.Generate">
            <summary>
            生成随机数
            </summary>
        </member>
        <member name="T:Spring.Randoms.StubRandomGenerator">
            <summary>
            伪随机数生成器，用于单元测试，固定返回字符串"random"
            </summary>
        </member>
        <member name="M:Spring.Randoms.StubRandomGenerator.Generate">
            <summary>
            生成随机数
            </summary>
        </member>
        <member name="T:Spring.Reflections.Finder">
            <summary>
            类型查找器
            </summary>
        </member>
        <member name="F:Spring.Reflections.Finder.SkipAssemblies">
            <summary>
            跳过的程序集
            </summary>
        </member>
        <member name="M:Spring.Reflections.Finder.GetAssemblies">
            <summary>
            获取程序集列表
            </summary>
        </member>
        <member name="M:Spring.Reflections.Finder.GetAssembliesFromCurrentAppDomain">
            <summary>
            从当前应用程序域获取程序集列表
            </summary>
        </member>
        <member name="M:Spring.Reflections.Finder.Match(System.Reflection.Assembly)">
            <summary>
            程序集是否匹配
            </summary>
        </member>
        <member name="M:Spring.Reflections.Finder.LoadAssemblies(System.String)">
            <summary>
            加载程序集到当前应用程序域
            </summary>
            <param name="path">目录绝对路径</param>
        </member>
        <member name="M:Spring.Reflections.Finder.Match(System.Reflection.AssemblyName)">
            <summary>
            程序集是否匹配
            </summary>
        </member>
        <member name="M:Spring.Reflections.Finder.Find``1(System.Collections.Generic.List{System.Reflection.Assembly})">
            <summary>
            查找类型列表
            </summary>
            <typeparam name="T">查找类型</typeparam>
            <param name="assemblies">在指定的程序集列表中查找</param>
        </member>
        <member name="M:Spring.Reflections.Finder.Find(System.Type,System.Collections.Generic.List{System.Reflection.Assembly})">
            <summary>
            查找类型列表
            </summary>
            <param name="findType">查找类型</param>
            <param name="assemblies">在指定的程序集列表中查找</param>
        </member>
        <member name="M:Spring.Reflections.Finder.GetTypes(System.Type,System.Reflection.Assembly)">
            <summary>
            获取类型列表
            </summary>
        </member>
        <member name="M:Spring.Reflections.Finder.AddType(System.Collections.Generic.List{System.Type},System.Type,System.Type)">
            <summary>
            添加类型
            </summary>
        </member>
        <member name="M:Spring.Reflections.Finder.MatchGeneric(System.Type,System.Type)">
            <summary>
            泛型匹配
            </summary>
        </member>
        <member name="T:Spring.Reflections.IFind">
            <summary>
            类型查找器
            </summary>
        </member>
        <member name="M:Spring.Reflections.IFind.GetAssemblies">
            <summary>
            获取程序集列表
            </summary>
        </member>
        <member name="M:Spring.Reflections.IFind.Find``1(System.Collections.Generic.List{System.Reflection.Assembly})">
            <summary>
            查找类型列表
            </summary>
            <typeparam name="T">查找类型</typeparam>
            <param name="assemblies">在指定的程序集列表中查找</param>
        </member>
        <member name="M:Spring.Reflections.IFind.Find(System.Type,System.Collections.Generic.List{System.Reflection.Assembly})">
            <summary>
            查找类型列表
            </summary>
            <param name="findType">查找类型</param>
            <param name="assemblies">在指定的程序集列表中查找</param>
        </member>
        <member name="T:Spring.Reflections.WebFinder">
            <summary>
            Web类型查找器
            </summary>
        </member>
        <member name="M:Spring.Reflections.WebFinder.GetAssemblies">
            <summary>
            获取程序集列表
            </summary>
        </member>
        <member name="T:Spring.Signatures.ISignKey">
            <summary>
            签名密钥
            </summary>
        </member>
        <member name="M:Spring.Signatures.ISignKey.GetKey">
            <summary>
            获取签名密钥
            </summary>
        </member>
        <member name="T:Spring.Signatures.ISignManager">
            <summary>
            签名服务
            </summary>
        </member>
        <member name="M:Spring.Signatures.ISignManager.Add(System.String,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Signatures.ISignManager.Sign">
            <summary>
            签名
            </summary>
        </member>
        <member name="T:Spring.Signatures.SignKey">
            <summary>
            签名密钥
            </summary>
        </member>
        <member name="F:Spring.Signatures.SignKey._key">
            <summary>
            密钥
            </summary>
        </member>
        <member name="M:Spring.Signatures.SignKey.#ctor(System.String)">
            <summary>
            初始化签名密钥
            </summary>
            <param name="key">密钥</param>
        </member>
        <member name="M:Spring.Signatures.SignKey.GetKey">
            <summary>
            获取签名密钥
            </summary>
        </member>
        <member name="T:Spring.Signatures.SignManager">
            <summary>
            签名服务
            </summary>
        </member>
        <member name="F:Spring.Signatures.SignManager._key">
            <summary>
            签名密钥
            </summary>
        </member>
        <member name="F:Spring.Signatures.SignManager._builder">
            <summary>
            Url参数生成器
            </summary>
        </member>
        <member name="M:Spring.Signatures.SignManager.#ctor(Spring.Signatures.ISignKey,Spring.Parameters.UrlParameterBuilder)">
            <summary>
            初始化签名服务
            </summary>
            <param name="key">签名密钥</param>
            <param name="builder">Url参数生成器</param>
        </member>
        <member name="M:Spring.Signatures.SignManager.Add(System.String,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Signatures.SignManager.Sign">
            <summary>
            签名
            </summary>
        </member>
        <member name="T:Spring.Str">
            <summary>
            字符串操作
            </summary>
            <summary>
            字符串操作 - 工具方法
            </summary>
        </member>
        <member name="M:Spring.Str.#ctor">
            <summary>
            初始化字符串操作
            </summary>
        </member>
        <member name="P:Spring.Str.Builder">
            <summary>
            字符串生成器
            </summary>
        </member>
        <member name="M:Spring.Str.Add``1(``0)">
            <summary>
            添加内容
            </summary>
            <typeparam name="T">值的类型</typeparam>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Str.Add(System.String,System.Object[])">
            <summary>
            添加内容
            </summary>
            <param name="value">值</param>
            <param name="args">参数</param>
        </member>
        <member name="M:Spring.Str.AddLine">
            <summary>
            添加换行
            </summary>
        </member>
        <member name="M:Spring.Str.AddLine``1(``0)">
            <summary>
            添加内容并换行
            </summary>
            <typeparam name="T">值的类型</typeparam>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Str.AddLine(System.String,System.Object[])">
            <summary>
            添加内容并换行
            </summary>
            <param name="value">值</param>
            <param name="args">参数</param>
        </member>
        <member name="M:Spring.Str.Replace(System.String)">
            <summary>
            替换内容
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Str.RemoveEnd(System.String)">
            <summary>
            移除末尾字符串
            </summary>
            <param name="end">末尾字符串</param>
        </member>
        <member name="M:Spring.Str.Clear">
            <summary>
            清空字符串
            </summary>
        </member>
        <member name="P:Spring.Str.Length">
            <summary>
            字符串长度
            </summary>
        </member>
        <member name="M:Spring.Str.ToString">
            <summary>
            转换为字符串
            </summary>
        </member>
        <member name="P:Spring.Str.Empty">
            <summary>
            空字符串
            </summary>
        </member>
        <member name="M:Spring.Str.GenerateCode">
            <summary>
            创建一个32位流水号
            </summary>
        </member>
        <member name="M:Spring.Str.GenerateCodeBy16">
            <summary>
            创建一个16位流水号
            </summary>
        </member>
        <member name="M:Spring.Str.PinYin(System.String)">
            <summary>
            获取汉字的拼音简码，即首字母缩写,范例：中国,返回zg
            </summary>
            <param name="chineseText">汉字文本,范例： 中国</param>
        </member>
        <member name="M:Spring.Str.ResolvePinYin(System.Char)">
            <summary>
            解析单个汉字的拼音简码
            </summary>
            <param name="text">单个汉字</param>
        </member>
        <member name="M:Spring.Str.ResolvePinYinByCode(System.UInt16)">
            <summary>
            使用字符编码方式获取拼音简码
            </summary>
        </member>
        <member name="M:Spring.Str.ResolvePinYinByFile(System.String)">
            <summary>
            从拼音简码文件获取
            </summary>
            <param name="text">单个汉字</param>
        </member>
        <member name="M:Spring.Str.Splice``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            拼接集合元素
            </summary>
            <typeparam name="T">集合元素类型</typeparam>
            <param name="list">集合</param>
            <param name="quotes">引号，默认不带引号，范例：单引号 "'"</param>
            <param name="separator">分隔符，默认使用逗号分隔</param>
        </member>
        <member name="M:Spring.Str.FirstUpper(System.String)">
            <summary>
            将值的首字母大写
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Str.ToCamel(System.String)">
            <summary>
            将字符串转成驼峰形式
            </summary>
            <param name="value">原始字符串</param>
        </member>
        <member name="M:Spring.Str.ContainsChinese(System.String)">
            <summary>
            是否包含中文
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:Spring.Str.ContainsNumber(System.String)">
            <summary>
            是否包含数字
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:Spring.Str.Distinct(System.String)">
            <summary>
            去除重复
            </summary>
            <param name="value">值，范例1："5555",返回"5",范例2："4545",返回"45"</param>
        </member>
        <member name="M:Spring.Str.Truncate(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            截断字符串
            </summary>
            <param name="text">文本</param>
            <param name="length">返回长度</param>
            <param name="endCharCount">添加结束符号的个数，默认0，不添加</param>
            <param name="endChar">结束符号，默认为省略号</param>
        </member>
        <member name="M:Spring.Str.GetEndString(System.Int32,System.String)">
            <summary>
            获取结束字符串
            </summary>
        </member>
        <member name="M:Spring.Str.Unique">
            <summary>
            获取全局唯一值
            </summary>
        </member>
        <member name="M:Spring.Str.GetLastProperty(System.String)">
            <summary>
            获取最后一个属性
            </summary>
            <param name="propertyName">属性名，范例，A.B.C,返回"C"</param>
        </member>
        <member name="T:Spring.Sys">
            <summary>
            系统操作
            </summary>
        </member>
        <member name="P:Spring.Sys.Line">
            <summary>
            换行符
            </summary>
        </member>
        <member name="P:Spring.Sys.Guid">
            <summary>
            Guid
            </summary>
        </member>
        <member name="M:Spring.Sys.GetType``1">
            <summary>
            获取类型,对可空类型进行处理
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:Spring.Sys.StartProcess(System.String)">
            <summary>
            启动进程
            </summary>
            <param name="processName">进程名称</param>
        </member>
        <member name="T:Spring.Validations.Aspects.ValidAttribute">
            <summary>
            验证拦截器
            </summary>
        </member>
        <member name="M:Spring.Validations.Aspects.ValidAttribute.Invoke(AspectCore.DynamicProxy.Parameters.ParameterAspectContext,AspectCore.DynamicProxy.Parameters.ParameterAspectDelegate)">
            <summary>
            执行
            </summary>
        </member>
        <member name="M:Spring.Validations.Aspects.ValidAttribute.Validate(AspectCore.DynamicProxy.Parameters.Parameter)">
            <summary>
            验证
            </summary>
        </member>
        <member name="M:Spring.Validations.Aspects.ValidAttribute.ValidateCollection(AspectCore.DynamicProxy.Parameters.Parameter)">
            <summary>
            验证集合
            </summary>
        </member>
        <member name="T:Spring.Validations.DataAnnotationValidation">
            <summary>
            DataAnnotations验证操作
            </summary>
        </member>
        <member name="M:Spring.Validations.DataAnnotationValidation.Validate(System.Object)">
            <summary>
            验证
            </summary>
            <param name="target">验证目标</param>
        </member>
        <member name="T:Spring.Validations.IValidation">
            <summary>
            验证操作
            </summary>
        </member>
        <member name="M:Spring.Validations.IValidation.Validate">
            <summary>
            验证
            </summary>
        </member>
        <member name="T:Spring.Validations.IValidationHandler">
            <summary>
            验证处理器
            </summary>
        </member>
        <member name="M:Spring.Validations.IValidationHandler.Handle(Spring.Validations.ValidationResultCollection)">
            <summary>
            处理验证错误
            </summary>
            <param name="results">验证结果集合</param>
        </member>
        <member name="T:Spring.Validations.IValidationRule">
            <summary>
            验证规则
            </summary>
        </member>
        <member name="M:Spring.Validations.IValidationRule.Validate">
            <summary>
            验证
            </summary>
        </member>
        <member name="T:Spring.Validations.NothingHandler">
            <summary>
            验证失败，不做任何处理
            </summary>
        </member>
        <member name="M:Spring.Validations.NothingHandler.Handle(Spring.Validations.ValidationResultCollection)">
            <summary>
            处理验证错误
            </summary>
            <param name="results">验证结果集合</param>
        </member>
        <member name="T:Spring.Validations.ThrowHandler">
            <summary>
            验证失败，抛出异常 - 默认验证处理器
            </summary>
        </member>
        <member name="M:Spring.Validations.ThrowHandler.Handle(Spring.Validations.ValidationResultCollection)">
            <summary>
            处理验证错误
            </summary>
            <param name="results">验证结果集合</param>
        </member>
        <member name="T:Spring.Validations.ValidationResultCollection">
            <summary>
            验证结果集合
            </summary>
        </member>
        <member name="M:Spring.Validations.ValidationResultCollection.#ctor">
            <summary>
            初始化验证结果集合
            </summary>
        </member>
        <member name="F:Spring.Validations.ValidationResultCollection._results">
            <summary>
            验证结果
            </summary>
        </member>
        <member name="F:Spring.Validations.ValidationResultCollection.Success">
            <summary>
            成功验证结果集合
            </summary>
        </member>
        <member name="P:Spring.Validations.ValidationResultCollection.IsValid">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Spring.Validations.ValidationResultCollection.Count">
            <summary>
            验证结果个数
            </summary>
        </member>
        <member name="M:Spring.Validations.ValidationResultCollection.Add(System.ComponentModel.DataAnnotations.ValidationResult)">
            <summary>
            添加验证结果
            </summary>
            <param name="result">验证结果</param>
        </member>
        <member name="M:Spring.Validations.ValidationResultCollection.AddList(System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            添加验证结果集合
            </summary>
            <param name="results">验证结果集合</param>
        </member>
        <member name="M:Spring.Validations.ValidationResultCollection.System#Collections#Generic#IEnumerable{System#ComponentModel#DataAnnotations#ValidationResult}#GetEnumerator">
            <summary>
            获取迭代器
            </summary>
        </member>
        <member name="M:Spring.Validations.ValidationResultCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            获取迭代器
            </summary>
        </member>
        <member name="T:Spring.Webs.Clients.HttpContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpContentType.FormUrlEncoded">
            <summary>
            application/x-www-form-urlencoded
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpContentType.Json">
            <summary>
            application/json
            </summary>
        </member>
        <member name="T:Spring.Webs.Clients.HttpRequest">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequest._successAction">
            <summary>
            执行成功的回调函数
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequest._successStatusCodeAction">
            <summary>
            执行成功的回调函数
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest.#ctor(System.Net.Http.HttpMethod,System.String)">
            <summary>
            初始化Http请求
            </summary>
            <param name="httpMethod">Http动词</param>
            <param name="url">地址</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest.OnSuccess(System.Action{System.String})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,参数为响应结果</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest.OnSuccess(System.Action{System.String,System.Net.HttpStatusCode})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest.SuccessHandler(System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            成功处理操作
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest.ResultFromJson``1">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest.ResultFromJsonAsync``1">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="T:Spring.Webs.Clients.HttpRequest`1">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequest`1._successAction">
            <summary>
            执行成功的回调函数
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequest`1._successStatusCodeAction">
            <summary>
            执行成功的回调函数
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequest`1._convertAction">
            <summary>
            执行成功的转换函数
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest`1.#ctor(System.Net.Http.HttpMethod,System.String)">
            <summary>
            初始化Http请求
            </summary>
            <param name="httpMethod">Http动词</param>
            <param name="url">地址</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest`1.OnSuccess(System.Action{`0},System.Func{System.String,`0})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,参数为响应结果</param>
            <param name="convertAction">将结果字符串转换为指定类型，当默认转换实现无法转换时使用</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest`1.OnSuccess(System.Action{`0,System.Net.HttpStatusCode},System.Func{System.String,`0})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
            <param name="convertAction">将结果字符串转换为指定类型，当默认转换实现无法转换时使用</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest`1.SuccessHandler(System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            成功处理操作
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest`1.ConvertTo(System.String,System.String)">
            <summary>
            将结果字符串转换为指定类型
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest`1.ResultFromJson">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequest`1.ResultFromJsonAsync">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="T:Spring.Webs.Clients.HttpRequestBase`1">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequestBase`1._url">
            <summary>
            地址
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequestBase`1._httpMethod">
            <summary>
            Http动词
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequestBase`1._params">
            <summary>
            参数集合
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequestBase`1._json">
            <summary>
            Json参数
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequestBase`1._contentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequestBase`1._cookieContainer">
            <summary>
            Cookie容器
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequestBase`1._timeout">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequestBase`1._headers">
            <summary>
            请求头集合
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequestBase`1._failAction">
            <summary>
            执行失败的回调函数
            </summary>
        </member>
        <member name="F:Spring.Webs.Clients.HttpRequestBase`1._failStatusCodeAction">
            <summary>
            执行失败的回调函数
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.#ctor(System.Net.Http.HttpMethod,System.String)">
            <summary>
            初始化Http请求
            </summary>
            <param name="httpMethod">Http动词</param>
            <param name="url">地址</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.ContentType(Spring.Webs.Clients.HttpContentType)">
            <summary>
            设置内容类型
            </summary>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.ContentType(System.String)">
            <summary>
            设置内容类型
            </summary>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.This">
            <summary>
            返回自身
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.Cookie(System.String,System.String,System.Double)">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="expiresDate">有效时间，单位：天</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.Cookie(System.String,System.String,System.DateTime)">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="expiresDate">到期时间</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.Cookie(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="path">源服务器URL子集</param>
            <param name="domain">所属域</param>
            <param name="expiresDate">到期时间</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.Cookie(System.Net.Cookie)">
            <summary>
            设置Cookie
            </summary>
            <param name="cookie">cookie</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.Timeout(System.Int32)">
            <summary>
            超时时间
            </summary>
            <param name="timeout">超时时间</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.Header``1(System.String,``0)">
            <summary>
            请求头
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.Data(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            添加参数字典
            </summary>
            <param name="parameters">参数字典</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.Data``1(System.String,``0)">
            <summary>
            添加参数
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.JsonData``1(``0)">
            <summary>
            添加Json参数
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.OnFail(System.Action{System.String})">
            <summary>
            请求失败回调函数
            </summary>
            <param name="action">执行失败的回调函数,参数为响应结果</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.OnFail(System.Action{System.String,System.Net.HttpStatusCode})">
            <summary>
            请求失败回调函数
            </summary>
            <param name="action">执行失败的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.Result">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.GetContentType(System.Net.Http.HttpResponseMessage)">
            <summary>
            获取内容类型
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.SendBefore">
            <summary>
            发送前操作
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.SendAsync">
            <summary>
            发送请求
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.SendAfter(System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            发送后操作
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.IsSuccess(System.Net.HttpStatusCode)">
            <summary>
            发送请求是否成功
            </summary>
            <param name="statusCode">状态码</param>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.SuccessHandler(System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            成功处理操作
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.FailHandler(System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            失败处理操作
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.ResultAsync">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.CreateHttpClient">
            <summary>
            创建请求客户端
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.CreateRequestMessage">
            <summary>
            创建请求消息
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.CreateHttpContent">
            <summary>
            创建请求内容
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.HttpRequestBase`1.CreateJsonContent">
            <summary>
            创建json内容类型
            </summary>
        </member>
        <member name="T:Spring.Webs.Clients.IHttpRequest">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.IHttpRequest.OnSuccess(System.Action{System.String})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,参数为响应结果</param>
        </member>
        <member name="M:Spring.Webs.Clients.IHttpRequest.OnSuccess(System.Action{System.String,System.Net.HttpStatusCode})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
        </member>
        <member name="M:Spring.Webs.Clients.IHttpRequest.ResultFromJson``1">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.IHttpRequest.ResultFromJsonAsync``1">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="T:Spring.Webs.Clients.IHttpRequest`1">
            <summary>
            Http请求
            </summary>
            <typeparam name="TResult">结果类型</typeparam>
        </member>
        <member name="M:Spring.Webs.Clients.IHttpRequest`1.OnSuccess(System.Action{`0},System.Func{System.String,`0})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,参数为响应结果</param>
            <param name="convertAction">将结果字符串转换为指定类型，当默认转换实现无法转换时使用</param>
        </member>
        <member name="M:Spring.Webs.Clients.IHttpRequest`1.OnSuccess(System.Action{`0,System.Net.HttpStatusCode},System.Func{System.String,`0})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
            <param name="convertAction">将结果字符串转换为指定类型，当默认转换实现无法转换时使用</param>
        </member>
        <member name="M:Spring.Webs.Clients.IHttpRequest`1.ResultFromJson">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.IHttpRequest`1.ResultFromJsonAsync">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="T:Spring.Webs.Clients.IRequest`1">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.ContentType(Spring.Webs.Clients.HttpContentType)">
            <summary>
            设置内容类型
            </summary>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.ContentType(System.String)">
            <summary>
            设置内容类型
            </summary>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.Cookie(System.String,System.String,System.Double)">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="expiresDate">有效时间，单位：天</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.Cookie(System.String,System.String,System.DateTime)">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="expiresDate">到期时间</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.Cookie(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="path">源服务器URL子集</param>
            <param name="domain">所属域</param>
            <param name="expiresDate">到期时间</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.Cookie(System.Net.Cookie)">
            <summary>
            设置Cookie
            </summary>
            <param name="cookie">cookie</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.Timeout(System.Int32)">
            <summary>
            超时时间
            </summary>
            <param name="timeout">超时时间,单位：秒</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.Header``1(System.String,``0)">
            <summary>
            请求头
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.Data(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            添加参数字典
            </summary>
            <param name="parameters">参数字典</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.Data``1(System.String,``0)">
            <summary>
            添加参数
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.JsonData``1(``0)">
            <summary>
            添加Json参数
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.OnFail(System.Action{System.String})">
            <summary>
            请求失败回调函数
            </summary>
            <param name="action">执行失败的回调函数,参数为响应结果</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.OnFail(System.Action{System.String,System.Net.HttpStatusCode})">
            <summary>
            请求失败回调函数
            </summary>
            <param name="action">执行失败的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.Result">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.IRequest`1.ResultAsync">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="T:Spring.Webs.Clients.WebClient">
            <summary>
            Web客户端
            </summary>
        </member>
        <member name="M:Spring.Webs.Clients.WebClient.Get(System.String)">
            <summary>
            Get请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:Spring.Webs.Clients.WebClient.Post(System.String)">
            <summary>
            Post请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:Spring.Webs.Clients.WebClient.Put(System.String)">
            <summary>
            Put请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:Spring.Webs.Clients.WebClient.Delete(System.String)">
            <summary>
            Delete请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="T:Spring.Webs.Clients.WebClient`1">
            <summary>
            Web客户端
            </summary>
            <typeparam name="TResult">返回的结果类型</typeparam>
        </member>
        <member name="M:Spring.Webs.Clients.WebClient`1.Get(System.String)">
            <summary>
            Get请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:Spring.Webs.Clients.WebClient`1.Post(System.String)">
            <summary>
            Post请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:Spring.Webs.Clients.WebClient`1.Put(System.String)">
            <summary>
            Put请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:Spring.Webs.Clients.WebClient`1.Delete(System.String)">
            <summary>
            Delete请求
            </summary>
            <param name="url">地址</param>
        </member>
    </members>
</doc>
